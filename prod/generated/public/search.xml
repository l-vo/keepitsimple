<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Installer un serveur mail sur Debian 9 (Stretch)</title>
      <link href="/2019/03/08/Installer-un-serveur-mail-sur-Debian-9-Stretch/"/>
      <url>/2019/03/08/Installer-un-serveur-mail-sur-Debian-9-Stretch/</url>
      
        <content type="html"><![CDATA[<p>Il m’arrive de temps à autre de changer de serveur dedié; pour en prendre un qui corresponde plus à mes besoins du moment ou simplement en faveur d’une offre plus intéressante. Ma grande hantise dans ces moments là, c’est la réinstallation du serveur de mail. N’étant pas “sysadmin”, j’y passe à chaque fois beaucoup trop de temps à mon goût, en montant ça à tatons au fil des articles que je trouve ici et là sur le web.<br>Ce problème me décide aujourd’hui à écrire un article, qui me permettra d’avoir une doc qui corresponde à mes besoins et que je sois sûr de retrouver la prochaine fois que j’en aurais besoin.<br><a id="more"></a><br>Nous allons donc dans cet article configurer un serveur mail gérant plusieurs adresses sur plusieurs domaines. Nous utiliserons des certificats <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> et nous mettrons en place <a href="https://spamassassin.apache.org/" target="_blank" rel="noopener">SpamAssassin</a> pour la gestion des mails indésirables. Nous installerons également le webmail <a href="https://roundcube.net/" target="_blank" rel="noopener">Roundcube</a>. En revanche nous ne gérerons pas dynamiquement l’ajout de nouvelles adresses mail ou de nouveaux domaines. Je l’ai fait par le passé (par curiosité via <a href="http://postfixadmin.sourceforge.net/" target="_blank" rel="noopener">PostfixAdmin</a>), mais n’ayant pas besoin de créer des adresses mail régulièrement ou de donner à un tiers la possibilité d’en créer, je me garderais ici de cette complexité.</p><p>Cet article est redigé pas à pas, afin de bien comprendre ce qu’apporte chaque étape. De cette façon, si par exemple vous n’avez besoin que d’un webmail pour vos comptes locaux, vous pourrez très bien suivre ce tutorial et vous arrêter après l’installation du webmail.</p><p>On considérera dans cet article que toutes les commandes sont exécutées depuis un compte administrateur.</p><h2 id="Installation-de-Postfix-et-mailutils"><a href="#Installation-de-Postfix-et-mailutils" class="headerlink" title="Installation de Postfix et mailutils"></a>Installation de Postfix et mailutils</h2><p>Pour expédier et recevoir nos emails, nous allons avoir besoin de <code>Postfix</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install postfix</span><br></pre></td></tr></table></figure></p><p>Des écrans de configurations vont défiler:</p><ul><li>Lorsque le programme d’installation va demander le type de configuration du serveur de mail, il faut choisir <code>Internet Site</code></li><li>Ensuite un FQDN va être demandé, généralement il doit correspondre au hostname de votre serveur. Quand Postfix reçoit un un mail provenant de ce domaine, il sait qu’il doit le remettre à un compte <strong>local</strong>. Dans nos examples, on considérera que notre FQDN est <code>mondomaine.tld</code>.  </li></ul><p>L’installation devrait ensuite se terminer.</p><p>Précédemment lorsque je parle de <em>compte locaux</em>, il s’agit de comptes qui correspondent à des utilisateurs sur mon système. La précision est importante car nous utiliserons ensuite dans notre serveur mail des <em>comptes virtuels</em> qui ne seront que des boites mails indépendantes qui peuvent être utilisées ou non par des utilisateurs du système. L’utilisateur <code>moi</code> sur mon système pourra utiliser le compte mail virtuel <code>moi @ mondomaine.tld</code>, mais il pourra aussi y avoir d’autres comptes virtuels (par exemple <code>webmaster @ mondomaine.tld</code> ou <code>foo @ bar.com</code>) qui ne correspondront à aucun compte local.</p><p>Pour continuer notre installation, nous allons avoir besoin d’un binaire de mail, pour envoyer des emails et consulter notre boite aux lettres:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install mailutils</span><br></pre></td></tr></table></figure></p><p>Pour reprendre l’exemple précédent, supposons que le hostname (<code>/etc/hostname</code>) de notre serveur soit <code>mondomaine.tld</code> et que <code>moi</code> soit un utilisateur de ce système; les commandes suivantes devraient envoyer un mail à l’utilisateur <code>moi</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"Test de mail"</span> | mail -s <span class="string">"Test de mail 1"</span> moi</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"Test de mail"</span> | mail -s <span class="string">"Test de mail 1"</span> moi@mondomaine.tld</span><br></pre></td></tr></table></figure></p><p>Pour les consulter, il suffit de se connecter en temps que user <code>moi</code> et de taper la commande <em>mail</em>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mail</span><br></pre></td></tr></table></figure></p><p>Essayons maintenant d’envoyer un mail vers l’extérieur en supposant que <em>monmailperso @ monfournisseur.com</em> soit mon adresse mail perso:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"Test de mail vers l'extérieur"</span> | mail -s <span class="string">"Test de mail 3"</span> monmailperso@monfournisseur.com</span><br></pre></td></tr></table></figure></p><p>A ce stade il est fort possible que l’email arrive dans les spams. Nous allons voir comment remédier à ça.</p><h2 id="Eviter-l’indesirabilite-de-nos-mails"><a href="#Eviter-l’indesirabilite-de-nos-mails" class="headerlink" title="Eviter l’indésirabilité de nos mails"></a>Eviter l’indésirabilité de nos mails</h2><p>Afin que nos mails n’atterissent pas dans le dossier spam de notre destinataire, certaines précautions sont à prendre.</p><h3 id="Tester-l’indesirabilite"><a href="#Tester-l’indesirabilite" class="headerlink" title="Tester l’indésirabilité"></a>Tester l’indésirabilité</h3><p><a href="https://www.mail-tester.com" target="_blank" rel="noopener">Ce site</a> permet de vérifier si nos emails risquent d’être classés comme indésirables par le logiciel de messagerie de notre destinataire (attention, vous êtes dans la version gratuite limités à 3 emails testés par jour). Utilisons donc l’adresse email fournie par <em>mail-tester</em> avec notre commande précédemment utilisée:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"Test de mail vers l'extérieur"</span> | mail -s <span class="string">"Test de mail 3"</span> <span class="built_in">test</span>-6ad40@mail-tester.com</span><br></pre></td></tr></table></figure></p><p>Pour améliorer le score que va vous retourner <em>mail-tester</em>, il est nécessaire d’avoir des entrées <code>SPF</code> et <code>DKIM</code> dans nos DNS. Vous pouvez trouvez un peu plus d’explication sur le rôle de ces entrées <a href="https://www.badsender.com/2014/01/13/delivrabilite-spf-dkim-dmarc/" target="_blank" rel="noopener">ici</a>.</p><h3 id="Ajouter-une-entree-MX-dans-nos-DNS"><a href="#Ajouter-une-entree-MX-dans-nos-DNS" class="headerlink" title="Ajouter une entrée MX dans nos DNS"></a>Ajouter une entrée MX dans nos DNS</h3><p>Cette entrée est nécessaire à SPF, mais au delà, elle permet de specifier le serveur de mail entrant pour un domaine (on peut avoir un site <em>mondomaine.fr</em> sur une machine et le serveur web sur une autre machine, donc avec une autre ip c’est pour celà que l’on cré souvent des CNAME du genre <em>smtp.mondomaine.fr</em>). Je choisi de suivre ce principe et dans mes DNS d’avoir des enregistrements <code>CNAME</code> (alias) de mon domaine <code>mondomaine.tld</code>. J’ai donc <code>smtp.mondomaine.tld</code> et <code>imap.mondomaine.tld</code> qui pointent vers <code>mondomaine.tld</code>. Mais ce n’est en rien obligatoire, pour faire sans alias spécifiques smtp/imap il suffit de remplacer dans mes exemples <code>smtp.mondomaine.tld</code> et <code>imap.mondomaine.tld</code> par simplement <code>mondomaine.tld</code>. L’entrée MX est composé d’un chiffre (1) et d’un nom de domaine (ou de sous-domaine):  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3600 IN MX 1   smtp.mondomaine.tld.</span><br></pre></td></tr></table></figure><p>Une fois que le champ MX est en place et qu’il s’est propagé (ça marche souvent tout de suite mais on préfère partir du principe qu’il faut 24h pour que les modifications DNS soient totallement effectives), on doit être en mesure d’envoyer des emails de l’extérieur vers le nom de domaine que l’on a configuré. Pour reprendre notre exemple précédent, nous pouvons envoyer un mail depuis une adresse email quelconque vers <code>moi @ mondomaine.tld</code>. Nous devrions voir le mail en se connectant à l’utilisateur <code>moi</code> et en utilisant la commande vu précédemment:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mail</span><br></pre></td></tr></table></figure><h3 id="Parametrer-SPF"><a href="#Parametrer-SPF" class="headerlink" title="Paramétrer SPF"></a>Paramétrer SPF</h3><p>L’idée du SPF, c’est de créer un enregistrement de type <code>TXT</code> dans nos DNS mettant en relation l’ip du serveur et le champ MX. Voilà mon enregistrement SPF, <code>xxx.xxx.xxx.xxx</code> devant être remplacé par mon adresse ip:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3600 IN TXT    &quot;v=spf1 ip4:xxx.xxx.xxx.xxx mx:smtp.mondomaine.tld ~all&quot;</span><br></pre></td></tr></table></figure><h3 id="Parametrer-DKIM"><a href="#Parametrer-DKIM" class="headerlink" title="Paramétrer DKIM"></a>Paramétrer DKIM</h3><p>Cette partie reprend largement les information de <a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-dkim-with-postfix-on-debian-wheezy" target="_blank" rel="noopener">ce billet</a>.</p><p>D’abord on installe <em>opendkim</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install opendkim opendkim-tools</span><br></pre></td></tr></table></figure></p><p>On créé ensuite la structure pour les configurations:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /etc/opendkim</span><br><span class="line">$ mv /etc/opendkim.conf /etc/opendkim/</span><br><span class="line">$ ln -s /etc/opendkim/opendkim.conf /etc/opendkim.conf</span><br><span class="line">$ mkdir /etc/opendkim/keys</span><br><span class="line"><span class="comment"># Pour chaque domaine que vous voudrez gérer, il faut créer un répertoire:</span></span><br><span class="line">$ mkdir /etc/opendkim/keys/mondomaine.tld</span><br></pre></td></tr></table></figure></p><p>Configurons opendkim pour utiliser le port 12301 en ajoutant les lignes suivantes à la fin du fichier <code>/etc/default/opendkim</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">AutoRestart             Yes</span><br><span class="line">AutoRestartRate         10/1h</span><br><span class="line">UMask                   002</span><br><span class="line">Syslog                  yes</span><br><span class="line">SyslogSuccess           Yes</span><br><span class="line">LogWhy                  Yes</span><br><span class="line"></span><br><span class="line">Canonicalization        relaxed/simple</span><br><span class="line"></span><br><span class="line">ExternalIgnoreList      refile:/etc/opendkim/TrustedHosts</span><br><span class="line">InternalHosts           refile:/etc/opendkim/TrustedHosts</span><br><span class="line">KeyTable                refile:/etc/opendkim/KeyTable</span><br><span class="line">SigningTable            refile:/etc/opendkim/SigningTable</span><br><span class="line"></span><br><span class="line">Mode                    sv</span><br><span class="line">PidFile                 /var/run/opendkim/opendkim.pid</span><br><span class="line">SignatureAlgorithm      rsa-sha256</span><br><span class="line"></span><br><span class="line">UserID                  opendkim:opendkim</span><br><span class="line"></span><br><span class="line">Socket                  inet:12301@localhost</span><br></pre></td></tr></table></figure></p><p>Ainsi que dans la configuration Postfix <code>/etc/postfix/main.cf</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># DKIM</span><br><span class="line">milter_protocol = 2</span><br><span class="line">milter_default_action = accept</span><br><span class="line">smtpd_milters = inet:localhost:12301</span><br><span class="line">non_smtpd_milters = inet:localhost:12301</span><br></pre></td></tr></table></figure></p><p>Nous allons maintenant définir notre ou nos domaines, dans le fichier <code>/etc/opendkim/TrustedHosts</code> que nous créons:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1</span><br><span class="line">localhost</span><br><span class="line">192.168.0.1/24</span><br><span class="line"></span><br><span class="line">mondomaine.tld</span><br><span class="line">monautredomaine.net</span><br><span class="line">encoreunautredomaine.org</span><br></pre></td></tr></table></figure></p><p>On continue dans la configuration avec le fichier <code>/etc/opendkim/KeyTable</code> (comme précédemment vous devez avoir une ligne par domaine):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail._domainkey.mondomaine.tld mondomaine.tld:mail:/etc/opendkim/keys/mondomaine.tld/mail.private</span><br></pre></td></tr></table></figure></p><p>Puis <code>/etc/opendkim/SigningTable</code> (toujours une ligne par domaine):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*@mondomaine.tld mail._domainkey.mondomaine.tld</span><br></pre></td></tr></table></figure></p><p>Voilà pour la conf :). Maintenant générons les clés, une par domaine. Les clés étant générés dans le répertoire courant, il faut donc se déplacer dans le répertoire que vous avez renseigné dans le fichier <code>KeyTable</code> pour le domaine.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/opendkim/keys/mondomaine.tld</span><br><span class="line">$ sudo opendkim-genkey -s mail -d mondomaine.tld</span><br></pre></td></tr></table></figure></p><p>Le fichier <code>mail.txt</code> va contenir un enregistrement DNS du genre:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mail._domainkeyINTXT( &quot;v=DKIM1; h=sha256; k=rsa; &quot;</span><br><span class="line">  &quot;p=encodeddata1&quot;</span><br><span class="line">  &quot;encodeddata2&quot; )</span><br></pre></td></tr></table></figure></p><p>Le fichier <code>mail.private</code> doit être accessible par opendkim, il faut donc en changer les droits:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chown opendkim: mail.private</span><br></pre></td></tr></table></figure></p><p>Il n’y a plus qu’a copier coller ces données dans vos enregistrements DNS. Au final, entre MX, SPF et DKIM, vos DNS devraient avoir cette allure:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$TTL 3600</span><br><span class="line">@IN SOA xxx.xxxxxx.xxx. xxx.xxxxxx.xxx.</span><br><span class="line">                  3600 IN NS     xxx.xxxxxx.xxx.</span><br><span class="line">                  3600 IN NS     xxx.xxxxxx.xxx.</span><br><span class="line">                  3600 IN A      xxx.xxx.xxx.xxx</span><br><span class="line">imap              3600 IN CNAME  mondomaine.tld.</span><br><span class="line">smtp              3600 IN CNAME  mondomaine.tld.</span><br><span class="line">                  3600 IN MX 1   smtp.mondomaine.tld.</span><br><span class="line">                  3600 IN TXT    &quot;v=spf1 ip4:xxx.xxx.xxx.xxx mx:smtp.mondomaine.tld ~all&quot;</span><br><span class="line">mail._domainkey   3600 IN TXT    ( &quot;v=DKIM1; k=rsa; h=sha256; p=myencodeddata1&quot; &quot;myencodeddata2&quot; )</span><br></pre></td></tr></table></figure></p><p>On reload postfix et opendkim<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload opendkim</span><br><span class="line">$ systemctl reload postfix</span><br></pre></td></tr></table></figure></p><p>Si vous réessayez <em>mail-tester</em> votre score devrait être meilleur et votre email ne devrait plus tomber dans les spam lorsque vous l’envoyez vers l’extérieur. Cependant comme nous avons modifié les enregistrements DNS, il faut garder à l’esprit que cela peut prendre jusqu’à 24h pour se propager totalement.</p><h3 id="DMARC"><a href="#DMARC" class="headerlink" title="DMARC"></a>DMARC</h3><p>Vous avez peut être noté que <em>mail-tester</em> nous signale malgré tout une entrée <code>DMARC</code> manquante. Sa mise en place est très simple (comme SPF, rien à installer, seulement une entrée DNS à créer), mais nécessite un suivi pour le paramétrage qui dépasse le cadre de cet article. Si vous voulez en savoir plus, je vous invite à lire <a href="https://www.dmarcanalyzer.com/fr/comment-creer-un-dmarc-record/" target="_blank" rel="noopener">cet article</a>. Mais en général, les champs SPF et DKIM suffisent pour qu’en message “normal” ne soit pas classé comme spam.</p><h2 id="Installation-de-Dovecot"><a href="#Installation-de-Dovecot" class="headerlink" title="Installation de Dovecot"></a>Installation de Dovecot</h2><p>Passons maintenant à l’installation de Dovecot. De base le système Linux gère un fichier par utilisateur qui contient tous ses mails (dans notre exemple <code>/var/mail/moi</code>). Dovecot va nous permettre d’avoir une structure de type <em>Maildir</em> (comme son nom l’indique basé sur des répertoires, avec 1 mail = 1 fichier) et de faire de l’IMAP, c’est à dire de pouvoir consulter les emails via un webmail ou via un client de messagerie, les messages restant synchronisés entre les différents logiciels.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install dovecot-imapd</span><br></pre></td></tr></table></figure></p><h3 id="Utilisation-du-format-de-stockage-Maildir"><a href="#Utilisation-du-format-de-stockage-Maildir" class="headerlink" title="Utilisation du format de stockage Maildir"></a>Utilisation du format de stockage Maildir</h3><p>Tout d’abord nous allons demander à Postfix de déposer les emails dans le répertoire <code>~/Maildir</code> de l’utilisateur en ajoutant la ligne suivante à la fin du fichier de configuration Postfix <code>/etc/postfix/main.cf</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">home_mailbox = Maildir/</span><br></pre></td></tr></table></figure></p><p>On reload Postfix<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload postfix</span><br></pre></td></tr></table></figure></p><p>Si l’on envoi un mail à l’utilisateur courant, un répertoire <em>Maildir</em> se créé dans le répertoire <em>home</em> de l’utilisateur destinataire. Si l’on parcours ce répertoire, on trouve un fichier dans <code>~/Maildir/new</code> qui correspond à notre email. En revanche lorsque l’on essaie de voir le mail via la commande habituelle:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mail</span><br></pre></td></tr></table></figure></p><p>Aucun mail ne s’affiche et c’est normal. Il existe une commande <code>mutt</code> qui permet de consulter les mails au format <em>Maildir</em>, mais elle n’a que peu d’intérêt ici étant donné que nous allons pouvoir utiliser le protocole IMAP pour utiliser un webmail ou un client de messagerie lourd. Préparons Dovecot à cela; d’abord, indiquons lui le format et la localisation des emails; dans le fichier <code>/etc/dovecot/conf.d/10-mail.conf</code>, changeons le paramètre <em>mail_location</em>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail_location = maildir:~/Maildir</span><br></pre></td></tr></table></figure></p><p>Dovecot permet aussi differents mode d’authentification (fichier `/etc/dovecot/conf.d/10-auth.conf). Si on regarde à la fin de celui-ci, on a les lignes suivantes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">!include auth-system.conf.ext</span><br><span class="line">#!include auth-sql.conf.ext</span><br><span class="line">#!include auth-ldap.conf.ext</span><br><span class="line">#!include auth-passwdfile.conf.ext</span><br><span class="line">#!include auth-checkpassword.conf.ext</span><br><span class="line">#!include auth-vpopmail.conf.ext</span><br><span class="line">#!include auth-static.conf.ext</span><br></pre></td></tr></table></figure></p><p>Le seul moyen d’authentification actif (décommenté) est celui qui utilise l’authentification système (authentification via le password du user sur le système). C’est bien ce dont on a besoin, rien a modifier pour l’instant dans ce fichier. On recharge Dovecot:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload dovecot</span><br></pre></td></tr></table></figure></p><h2 id="Installation-de-Roundcube"><a href="#Installation-de-Roundcube" class="headerlink" title="Installation de Roundcube"></a>Installation de Roundcube</h2><p>Nous allons utiliser Roundcube comme webmail. Roundcube nécessite un serveur web (<code>Apache</code> ou <code>nginx</code>) et une base de donnée <code>Mysql</code>. Je vous encourage à regarder les informations plus exhaustives sur la configuration de Roundcube <a href="https://github.com/roundcube/roundcubemail/wiki/Installation" target="_blank" rel="noopener">ici</a>.</p><h3 id="Installation-et-creation-de-la-base-de-donnee-MySQL"><a href="#Installation-et-creation-de-la-base-de-donnee-MySQL" class="headerlink" title="Installation et création de la base de donnée MySQL"></a>Installation et création de la base de donnée MySQL</h3><p>D’abord, installons mysql et connectons nous en root;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install mysql-server</span><br><span class="line">$ mysql</span><br></pre></td></tr></table></figure></p><p>Nous allons maintenant créer une base dédiée à Roundcube et un utilisateur qu’utilisera notre webmail pour s’y connecter. Bien sûr <em>monpassword</em> est pour l’exemple, votre password devra être plus sécurisé, le seul impératif étant de mettre le même dans l’assistant de configuration Roundcube. Donc une fois que l’on a l’invite MySQL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE DATABASE roundcubemail;</span><br><span class="line">&gt; GRANT ALL PRIVILEGES ON roundcubemail.* TO roundcube@localhost IDENTIFIED BY &apos;monpassword&apos;;</span><br><span class="line">&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></p><h3 id="Mise-en-place-des-sources-de-Roundcube"><a href="#Mise-en-place-des-sources-de-Roundcube" class="headerlink" title="Mise en place des sources de Roundcube"></a>Mise en place des sources de Roundcube</h3><p>Téléchargons la dernière version de <a href="https://roundcube.net/download/" target="_blank" rel="noopener">Roundcube</a>. On choisira la version <em>complète</em> qui évite d’avoir à installer manuellement les dépendances PHP.</p><p>Téléchargeons et décompressons les sources dans <code>/var/www/roundcube</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/roundcube/roundcubemail/releases/download/1.3.8/roundcubemail-1.3.8-complete.tar.gz</span><br><span class="line">$ tar -zxf roundcubemail-1.3.8-complete.tar.gz</span><br><span class="line">$ rm roundcubemail-1.3.8-complete.tar.gz</span><br><span class="line">$ mv roundcubemail-1.3.8 /var/www/roundcube</span><br><span class="line">$ chown -R www-data: /var/www/roundcube &amp;&amp; chmod -R 775 /var/www/roundcube</span><br></pre></td></tr></table></figure></p><h3 id="Installation-du-serveur-web"><a href="#Installation-du-serveur-web" class="headerlink" title="Installation du serveur web"></a>Installation du serveur web</h3><p>Nous allons ensuite avoir besoin d’un serveur web. Roundcube est pré-paramétré pour être utilisé avec Apache. Par simplicité c’est donc Apache que nous allons utiliser. Installons Apache2, PHP et les extensions nécessaires à Roundcube (vous pouvez normalement utiliser une version plus récente de PHP si vous le souhaitez, j’utilise la 7.0 parce que c’est celle qui est installée sur Stretch avec la commande <em>apt-get install php</em>):<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install apache2 libapache2-mod-php php7.0 php7.0-dom php7.0-gd php7.0-imagick php7.0-intl php7.0-ldap php7.0-mbstring php7.0-mysql php7.0-zip</span><br></pre></td></tr></table></figure></p><p>Commençons par une petite config à modifier dans le fichier <code>/etc/php/7.0/apache2/php.ini</code>:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date.timezone = Europe/Paris</span><br></pre></td></tr></table></figure></p><p>Si tout s’est bien passé, lorsque vous tapez dans la barre d’adresse de votre navigateur votre nom de domaine qui vous permettra d’accéder à Roundcube (<em>mondomaine.tld</em> pour moi), la page d’accueil d’Apache2 devrait s’afficher.</p><p>Il faut maintenant créer la configuration du serveur web pour qu’il serve les sources Roundcube; éditons un nouveau fichier <code>/etc/apache2/sites-available/roundcube.conf</code> et mettons y le contenu suivant (votre nom de domaine qui va vous permettre d’accéder à l’interface Roundcube doit être en lieu et place de <em>mondomaine.tld</em>):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">        ServerName      mondomaine.tld</span><br><span class="line">        DocumentRoot    /var/www/roundcube</span><br><span class="line"> </span><br><span class="line">        &lt;Directory /var/www/roundcube&gt;</span><br><span class="line">                AllowOverride All</span><br><span class="line">                Order Allow,Deny</span><br><span class="line">                Allow from All</span><br><span class="line">        &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p><p>Activons ensuite la configuration Roundcube et désactivons la configuration d’exemple qui affiche la page d’accueil Apache2:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ a2dissite 000-default</span><br><span class="line">$ a2ensite roundcube</span><br><span class="line">$ systemctl reload apache2</span><br></pre></td></tr></table></figure></p><h3 id="Configuration-de-Roundcube"><a href="#Configuration-de-Roundcube" class="headerlink" title="Configuration de Roundcube"></a>Configuration de Roundcube</h3><p>Lançons maintenant l’installateur automatique de Roundcube en utilisant l’url <code>/installer</code> depuis votre domaine. Chez moi ce sera donc <code>http://mondomaine.tld/installer</code>. Vous pouvez dans la plupart des cas laisser les valeurs par default. Renseignez juste au step 2 <em>“Create config”</em> le mot de passe de l’utilisateur <em>roundcube</em> pour la base de donnée (<em>monpassword</em> dans notre exemple).<br>Après avoir cliqué sur le bouton <em>CREATE</em>, la page <em>“Create config”</em> se rechargera indiquant que le fichier de configuration a été créé. Un bouton <em>Continue</em> est affiché en dessous pour passer à l’étape <em>“Test config”</em>. Ne négligez pas cette étape, elle vous proposera d’initializer la base de donnée via un bouton, sans ça vous ne pourrez rien faire car il vous manquera les tables dans la base. Voilà pour la configuration.</p><p>Lorsque vous vous rendez à l’url de base de votre domaine (<code>http://mondomaine.tld/</code> pour moi), vous devriez avoir la mire de connexion Roundcube. Vous devriez normalement voir l’email que nous avons envoyé précédemment. Roundcube devrait également vous permettre d’envoyer des mails vers l’extérieur.</p><p>Si tout est ok il faut pour des raisons de sécurité supprimer le répertoire d’installation de Roundcube:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf installer</span><br></pre></td></tr></table></figure></p><p>L’installation que nous avons faite ici est vraiment basique, il peut y avoir des ajustements notamment sur la configuration PHP à faire. Je vous encourage par rapport à cela à lire les <a href="https://github.com/roundcube/roundcubemail/wiki/Installation" target="_blank" rel="noopener">recommandations d’installation Roundcube</a>. De plus, afin d’éviter que les mots de passe de votre système ne transitent en clair sur le réseau, il vous appartient de <a href="https://www.memoinfo.fr/tutoriels-linux/configurer-lets-encrypt-apache/" target="_blank" rel="noopener">sécuriser votre webmail via https</a>.</p><h2 id="Comptes-mails-virtuels"><a href="#Comptes-mails-virtuels" class="headerlink" title="Comptes mails virtuels"></a>Comptes mails virtuels</h2><p>Là ça va devenir un peu plus intéressant. Parce que même si l’on a pas à gérer plusieurs dizaines d’adresses mail, on ne souhaite pas avoir a créer pour chaque compte mail un compte utilisateur sur le système. De plus, avec le système actuel, comment gérer des adresses d’un autre domaine ? On peut créer un autre domaine qui pointe vers la même machine, mais si on a <code>moi @ mondomaine1.com</code> et <code>moi @ mondomaine2.com</code> qui appartiennent à deux personnes différentes, les deux adresses arriveront au compte système <em>moi</em>. Et lorsque l’on enverra vers l’extérieur, un seul des deux domaines pourra être configuré, si c’est <em>mondomaine1.com</em> on ne pourra jamais envoyer des mails à partir de l’adresse <code>moi @ mondomaine2.com</code>. La solution à ces problèmes sont les comptes mails virtuels.</p><p>Nous avons tout d’abord besoin d’un groupe et d’un utilisateur système qui va avoir accès aux boites mail virtuelles. Nommmons le <code>vmail</code> et attribuons lui l’id <code>2222</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ groupadd vmail -g 2222</span><br><span class="line">$ useradd vmail -r -g 2222 -u 2222 -d /var/vmail -m</span><br></pre></td></tr></table></figure></p><h3 id="Parametrage-de-Postfix"><a href="#Parametrage-de-Postfix" class="headerlink" title="Paramétrage de Postfix"></a>Paramétrage de Postfix</h3><p>Dans le répertoire <code>/etc/postix</code>, créons un fichier <code>vhosts</code> qui contiendra les domaines pour lesquels on veut gérer les emails (un par ligne):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mondomaine.tld</span><br><span class="line">monautredomaine.net</span><br><span class="line">encoreunautredomaine.org</span><br></pre></td></tr></table></figure></p><p>Ensuite créons un fichier <code>valiases</code>. Il va remplacer le fichier <code>/etc/aliases</code> qui est utilisé lorsque l’on ne se sert pas de comptes mails virtuels. Nous devons donc y redefinir la redirection de <code>postmaster</code> vers <code>root</code> qui existe dans <code>/etc/aliases</code>. Si vous n’avez pas l’intention de créer de compte mail virtuel pour le compte root, alors il est nécessaire aussi que vous redirigiez les mails pour le compte root vers le compte que vous utilisez habituellement:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postmaster@mondomaine.tld root@mondomaine.tld</span><br><span class="line">root@mondomaine.tld       moi@mondomaine.tld</span><br></pre></td></tr></table></figure></p><p>On notera que contrairement au fichier <code>/etc/aliases</code>, il est ici nécessaire de spécifier le domaine pour les comptes mails. </p><p>Enfin, l’indispensable fichier <code>vmaps</code>, qui va indiquer les chemins relatifs des boites mails dans le dossier <code>/var/vmail</code>. Le format est libre mais en général on chosi de regrouper par domaine pour le cas ou des noms existeraient dans plusieurs domaines. Attention à ne pas oublier le <code>/</code> de fin, il est particulièrement important car il détermine que nous allons utiliser le format <em>Maildir</em> et non <em>mbox</em>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">moi@mondomaine.tld                mondomaine.tld/me/</span><br><span class="line">monmail1@monautredomaine.net      monautredomaine.net/monmail1/</span><br><span class="line">monmail2@monautredomaine.net      monautredomaine.net/monmail2/</span><br><span class="line">monmail1@encoreunautredomaine.org encoreunautredomaine.org/monmail1/</span><br><span class="line">monmail3@encoreunautredomaine.org encoreunautredomaine.org/monmail3/</span><br></pre></td></tr></table></figure></p><p>“Hashons” en table les fichiers maps et aliases. Ce format permet de ne pas avoir à reloader Postfix lorsque ces fichiers sont modifiés.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ postmap /etc/postfix/valiases</span><br><span class="line">$ postmap /etc/postfix/vmaps</span><br></pre></td></tr></table></figure></p><p>Et ajoutons les paramètrages suivants dans <code>/etc/postfix/main.cf</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">virtual_mailbox_domains = /etc/postfix/vhosts</span><br><span class="line">virtual_mailbox_base = /var/vmail</span><br><span class="line">virtual_mailbox_maps = hash:/etc/postfix/vmaps</span><br><span class="line">virtual_minimum_uid = 2222</span><br><span class="line">virtual_uid_maps = static:2222</span><br><span class="line">virtual_gid_maps = static:2222</span><br><span class="line">virtual_alias_maps = hash:/etc/postfix/valiases</span><br></pre></td></tr></table></figure></p><p>Tout en supprimant (ou commentant) celui-ci qui devient inutile:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#home_mailbox = Maildir/</span><br></pre></td></tr></table></figure></p><p>Et surtout en enlevant votre domaine (<em>mondomaine.tld</em> pour moi) du paramètre <code>$mydestination</code>. Ainsi Postfix sait qu’il ne doit plus delivrer le mail à un utilisateur système pour le domaine que l’on vient d’enlever. La conséquence sera que nos utilisateurs systèmes utiliseront des boites virtuelles.  </p><p>Rechargeons Postfix:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload postfix</span><br></pre></td></tr></table></figure></p><p>Vous pouvez maintenant envoyer un email au compte virtuel créé (ou à l’un des comptes virtuels créés), vous devriez constater que la structure au format <em>Maildir</em> s’est créé pour votre compte dans <code>/var/vmail</code>.</p><h3 id="Parametrage-de-Dovecot"><a href="#Parametrage-de-Dovecot" class="headerlink" title="Paramétrage de Dovecot"></a>Paramétrage de Dovecot</h3><p>Pour consulter l’email précédemment envoyé, il faut maintenant configurer Dovecot. Nous allons avoir deux choses à modifier dans Dovecot; la nouvelle localisation des mails (<code>/var/vmail</code>) et la façon de s’authentifier (les utilisateurs ne correspondant plus à des comptes systèmes, on n’a plus de mots de passe !).<br>Tout d’abord modifions la localisation des boites mails (qui doivent être dans le répertoire <code>/var/vmail</code>), avec l’arborescence en accord avec ce que l’on a défini dans Postfix. Effectuons cette modif dans <code>/etc/dovecot/conf.d/10-mail.conf</code> (vous pouvez trouver la signification de %d et %n dans les commentaires de ce fichier):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail_location = maildir:/var/vmail/%d/%n</span><br></pre></td></tr></table></figure></p><p>Ensuite à la fin du fichier <code>/etc/dovecot/conf.d/10-auth.conf</code>, nous allons remplacer l’authentification “système” par une authentification à base de fichier password:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!include auth-system.conf.ext</span><br><span class="line">#!include auth-sql.conf.ext</span><br><span class="line">#!include auth-ldap.conf.ext</span><br><span class="line">!include auth-passwdfile.conf.ext</span><br><span class="line">#!include auth-checkpassword.conf.ext</span><br><span class="line">#!include auth-vpopmail.conf.ext</span><br><span class="line">#!include auth-static.conf.ext</span><br></pre></td></tr></table></figure></p><p>Paramétrons ensuite le fichier <code>/etc/dovecot/conf.d/auth-passwdfile.conf.ext</code>, son contenu devra être le suivant:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">auth_mechanisms = plain cram-md5</span><br><span class="line">passdb &#123;</span><br><span class="line">  driver = passwd-file</span><br><span class="line">  args = scheme=sha512-crypt /etc/sha512-crypt.pwd</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">userdb &#123;</span><br><span class="line">  driver = static</span><br><span class="line">  args = uid=vmail gid=vmail home=/var/vmail/%d/%n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Pour résumer cette configuration, on va mettre les mots de passes cryptés au format sha512 dans un fichier /etc/sha512-crypt.pwd. Le méchanisme d’authentification est dit “plain-text”, ce qui signifie que les mots de passe transitent en clair sur le réseau. Pour palier à ce problème, les connexions doivent être cryptées, c’est pour cela que le webmail précédemment mis en place doit être protégé par une connexion sécurisée. Je ne m’attarderais pas plus sur cette partie qui sort un peu du cadre de cette article, même si l’on reparlera brièvement de connexion sécurisée et de <em>Let’s Encrypt un peu plus loin</em>.</p><p>A noter que là aussi on doit passer le chemin du stockage des mails virtuels.</p><p>Pour générer un mot de passe au format sha512, vous pouvez utiliser la commande fournie par Dovecot:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ doveadm pw -s sha512-crypt</span><br></pre></td></tr></table></figure></p><p>Le fichier <code>/etc/sha512-crypt.pwd</code> doit être au format user:mot_de_passe_crypte, ainsi votre fichier devrait ressembler plus ou moins à ça:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">moi@mondomaine.tld:&#123;SHA512-CRYPT&#125;$6$IIqxym0pZk32SFlQ$sC04yUm9EX5xvTYWxqKGk5T94ehqbnQgkJZSrOXRBk/1PF/2/kIMvHOZMCEHSp43nG9VZ6p06SCbPTOPWns020</span><br><span class="line">monmail1@mondomaine2.fr:&#123;SHA512-CRYPT&#125;$6$b5syhg6XjqU9ppTQ$lKRxY5VlfMldDghGl1RdCnyhPDVDyrL/tRy6z2wYMFdWO6ZMLhJdseindT6MCySkjjdYvzVbYpA4sNk2qnC3X1</span><br><span class="line">monmail2@mondomaine2.fr:&#123;SHA512-CRYPT&#125;$6$n94IadnRSXEJ.yio$kohBaVSbtJwieU2PIbxVCuP0vpxGSed8Qz3rA8252AQ5Kai4MnPCr4mVc8SLXHdj7J8zowz181pLEDwZdBny60</span><br><span class="line">monmail1@mondomaine3.com:&#123;SHA512-CRYPT&#125;$6$7zYKwZRZ3Yeu6k/L$qDU3FpO2yTsMISP/8z8Pza1WL5SzKu.votfyhY8jVvT7f5/8H4AifgluJB.HGaNCQB5qzctKLIrQ2.rAMbZl1.</span><br><span class="line">monmail3@mondomaine3.com:&#123;SHA512-CRYPT&#125;$6$m5LIbqaGfkSVh8xb$rXUtjG2eeRJu/CA6HMMGQ6jB8fVxgXhl/QXW4MoKA4zaZ7jB1gt/VpwEtPNc5pQZKi0wvX0wttmVm6v2BXyd2.</span><br></pre></td></tr></table></figure></p><p>On reload Dovecot:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload dovecot</span><br></pre></td></tr></table></figure></p><p>Vous devriez maintenant être en mesure de vous connecter à Roundcube via l’utilisateur virtuel et le mot de passe que vous avez choisi. Vous devriez pouvoir consulter le mail que l’on a précédemment envoyé pendant la configuration de Postfix, et également en envoyer vers l’extérieur.<br>Nous sommes désormais en mesure de créer autant de compte mails que nous le souhaitons sur les différents domaines qui nous appartiennent. Notre principale restriction est maintenant que nous ne pouvons consulter/envoyer des emails que par l’intérmédiaire d’un webmail.</p><h2 id="Utilisation-d’un-client-mail"><a href="#Utilisation-d’un-client-mail" class="headerlink" title="Utilisation d’un client mail"></a>Utilisation d’un client mail</h2><p>Pour être en mesure d’utiliser un client mail, il va nous falloir un moyen de d’authentifier les requêtes du client. Nous allons pour cela simplement nous appuyer sur le système déjà mis en place sur Dovecot.</p><p>Dans la section <code>service auth</code> du fichier <code>/etc/dovecot/conf.d/10-master.conf</code> ajoutons les lignes suivantes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Postfix smtp-auth</span><br><span class="line">  unix_listener /var/spool/postfix/private/auth &#123;</span><br><span class="line">    mode = 0666</span><br><span class="line">    user=postfix</span><br><span class="line">    group=postfix</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>Indiquons à Postfix que nous allons utiliser Dovecot pour l’authentification SASL en ajoutant dans <code>/etc/postfix/main.cf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smtpd_sasl_auth_enable = yes</span><br><span class="line">smtpd_sasl_type = dovecot</span><br><span class="line">smtpd_sasl_path = private/auth</span><br></pre></td></tr></table></figure></p><p>Comme nous entrons dans le monde des connexions sécurisées et des certificats, il va nous falloir un certificat pour utiliser la connexion avec notre serveur mail. Vous pouvez utiliser le certificat “snake-oil” par default en décommentant ces lignes (toujours dans <code>main.cf</code>):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem</span><br><span class="line">smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key</span><br><span class="line">smtpd_use_tls=yes</span><br><span class="line">smtpd_tls_session_cache_database = btree:$&#123;data_directory&#125;/smtpd_scache</span><br><span class="line">smtp_tls_session_cache_database = btree:$&#123;data_directory&#125;/smtp_scache</span><br></pre></td></tr></table></figure></p><p>Cependant ce n’est pas le plus secure et pour cette raison tous les clients mails ne l’acceptent pas. Et puis même si vous n’avez pas de “vrai” certificat longue durée associé à votre domaine, utiliser un certificat par défaut alors que <em>Let’s Encrypt</em><br> fait des merveilles serait un crime. Un prochain billet est prévu prochainement pour vous parler un peu de ce fantastique outil :). En utilisant Let’s Encrypt, la configuration est chez moi:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">smtpd_tls_CAfile = /etc/letsencrypt/live/imap.mondomaine.tld/chain.pem</span><br><span class="line">smtpd_tls_cert_file = /etc/letsencrypt/live/imap.mondomaine.tld/cert.pem</span><br><span class="line">smtpd_tls_key_file = /etc/letsencrypt/live/imap.mondomaine.tld/privkey.pem</span><br><span class="line">smtpd_use_tls=yes</span><br><span class="line">smtpd_tls_session_cache_database = btree:$&#123;data_directory&#125;/smtpd_scache</span><br><span class="line">smtp_tls_session_cache_database = btree:$&#123;data_directory&#125;/smtp_scache</span><br></pre></td></tr></table></figure></p><p>Vous noterez que mon certificat se nomme <em>imap.mondomaine.tld</em>, c’est un certificat multi-domaine qui inclus imap.mondomaine.tld, smtp.mondomaine.tld ainsi que les entrées imap/smtp de mes autres domaines. Let’s encrypt nomme le certificat avec le premier domaine de la commande, donc ici imap.mondomaine.tld.</p><p>Rajoutons également cette ligne qui va nous permettre de chiffrer les emails:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smtp_tls_security_level = may</span><br></pre></td></tr></table></figure></p><p>A tout seigneur, tout honneur, il faut également permettre à Postfix d’utiliser le port <code>587</code>, port par convention pour les connexions sécurisées. Décommentons les lignes ci-dessous du fichier <code>/etc/postfix/master.cf</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">submission inet n       -       y       -       -       smtpd</span><br><span class="line">  -o syslog_name=postfix/submission</span><br><span class="line">  -o smtpd_tls_security_level=encrypt</span><br><span class="line">  -o smtpd_sasl_auth_enable=yes</span><br><span class="line">  -o smtpd_reject_unlisted_recipient=no</span><br><span class="line">  -o smtpd_client_restrictions=$mua_client_restrictions</span><br><span class="line">  -o smtpd_helo_restrictions=$mua_helo_restrictions</span><br><span class="line">  -o smtpd_sender_restrictions=$mua_sender_restrictions</span><br><span class="line">  -o smtpd_recipient_restrictions=</span><br><span class="line">  -o smtpd_relay_restrictions=permit_sasl_authenticated,reject</span><br><span class="line">  -o milter_macro_daemon_name=ORIGINATING</span><br></pre></td></tr></table></figure></p><p>Associons également notre certificat aux requêtes sur le port <code>465</code>. Dans le fichier <code>/etc/dovecot/conf.d/10-ssl.conf</code>, activons ssl et ajoutons notre certificat:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssl = yes</span><br><span class="line"># ...</span><br><span class="line">ssl_cert = &lt;/etc/letsencrypt/live/imap.mondomaine.tld/fullchain.pem</span><br><span class="line">ssl_key = &lt;/etc/letsencrypt/live/imap.mondomaine.tld/privkey.pem</span><br></pre></td></tr></table></figure></p><p>Reloadons Postfix et Dovecot pour prendre en compte les modifications:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload postfix</span><br><span class="line">$ systemctl reload dovecot</span><br></pre></td></tr></table></figure></p><p>En configurant votre client mail sur les ports <code>587</code> (pour le courrier sortant) et <code>465</code> (pour le courrier entrant), cela avec une connexion chiffrée <code>STARTTLS</code>, vous devriez être capable d’envoyer des emails (désormais chiffrés) sans avoir à passer par le webmail.</p><h2 id="Gestion-du-spam-avec-SpamAssassin-et-Procmail"><a href="#Gestion-du-spam-avec-SpamAssassin-et-Procmail" class="headerlink" title="Gestion du spam avec SpamAssassin et Procmail"></a>Gestion du spam avec SpamAssassin et Procmail</h2><p>Avec la possibilité d’utiliser un webmail ou un client mail et en envoyant des emails chiffrés, on a de quoi pouvoir utiliser nos emails presque normallement. Presque car nous n’avons pas encore géré le fléau du monde numérique moderne, le spam. Nous allons utiliser pour cela deux outils, <code>SpamAssassin</code> qui va détecter les emails de spam et les flagger, et <code>Procmail</code> qui permet de déplacer dans des dossiers des mails qui répondent à des critères choisis.</p><h3 id="Mise-en-place-de-SpamAssassin"><a href="#Mise-en-place-de-SpamAssassin" class="headerlink" title="Mise en place de SpamAssassin"></a>Mise en place de SpamAssassin</h3><p>Je vais ici plus ou moins reprendre les très bonnes explications de <a href="http://www.sublimigeek.fr/comment-installer-spamassassin-sur-son-serveur" target="_blank" rel="noopener">cet article</a>. N’hésitez pas à lire cet article qui est plus détaillé sur la partie SpamAssassin.</p><p>Installons l’outil ainsi que <em>spamc</em> qui est nécessaire:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install spamassassin spamc</span><br></pre></td></tr></table></figure></p><p>Crééons un utilisateur spécifique <code>spamd</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ useradd --home /var/spamassassin --create-home --system spamd</span><br></pre></td></tr></table></figure></p><p>On change le propriétaire de <code>/var/lib/spamassassin</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chown spamd: /var/lib/spamassassin</span><br></pre></td></tr></table></figure></p><p>Ensuite il faut faire quelques modifications dans la configuration du démon SpamAssassin dans le fichier <code>/etc/default/spamassassin</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ENABLED=1</span><br><span class="line"># ...</span><br><span class="line">OPTIONS=&quot;--create-prefs --max-children 5 --helper-home-dir --username spamd -H /var/lib/spamassassin -s /var/log/spamd.log&quot;</span><br></pre></td></tr></table></figure></p><p>Maintenant, il faut mettre en place SpamAssassin en tant que filtre Postfix. Dans le fichier <code>/etc/postfix/main.cf</code>, rajoutons <strong>-o content_filter=spamassassin</strong> à la ligne qui gère le port smtp. ça devrais nous donner:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smtp      inet  n       -       y       -       -       smtpd</span><br><span class="line">  -o content_filter=spamassassin</span><br></pre></td></tr></table></figure></p><p>Toujours dans le fichier <code>master.cf</code> (à la fin de préférence), déclarons le filtre proprement dit:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spamassassin unix  -       n       n       -       -       pipe</span><br><span class="line">   user=spamd argv=/usr/bin/spamc -f -e</span><br><span class="line">   /usr/sbin/sendmail - oi -f $&#123;sender&#125; $&#123;recipient&#125;</span><br></pre></td></tr></table></figure></p><p>Maintenant nous allons rédiger nos règles de spam dans le fichier <code>/etc/spamassassin/local.cf</code>; j’utilise le paramétrage l’article de sublimigeek, à vous d’adapter ensuite à l’usage:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rewrite_header Subject *****SPAM***** </span><br><span class="line">required_score 3.0 </span><br><span class="line">report_safe 0</span><br><span class="line">use_bayes 1</span><br><span class="line">bayes_auto_learn 1</span><br></pre></td></tr></table></figure></p><p>Enfin on démarre SpamAssassin et on redémarre Postfix (le reload ne suffit pas):<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start spamassassin</span><br><span class="line">$ systemctl restart postfix</span><br></pre></td></tr></table></figure></p><p>Si vous envoyez un mail avec comme corps <code>XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X</code>, cela devrait générer un faux positif et vous devriez voir ajouter <code>*****SPAM*****</code> à l’objet de votre message.</p><p>Les bases de données de spam sont continuellement mises à jour. Pour cette raison vous devez mettre à jour régulièrement votre base locale d’information via la commande <code>/usr/bin/sa-update</code>. Par exemple voilà une ligne à mettre dans mon crontab root qui me permet de mettre à jour mes données tous les lundi à 16h:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 16 * * 1 /usr/bin/sa-update</span><br></pre></td></tr></table></figure></p><p>Maintenant que nous avons un système efficace pour flagger les spams, voyons comment les classer dans un dossier adéquat (“Spam” par exemple).</p><h3 id="Installation-et-configuration-de-Procmail"><a href="#Installation-et-configuration-de-Procmail" class="headerlink" title="Installation et configuration de Procmail"></a>Installation et configuration de Procmail</h3><p>Installons le logiciel:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install procmail</span><br></pre></td></tr></table></figure></p><p>Pour utiliser Procmail, il faut le définir en temps que transport pour Postfix; créons le fichier <code>/etc/postfix/transport</code> avec une ligne pour chacun de vos comptes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">moi@mondomaine.tld                procmail</span><br><span class="line">monmail1@monautredomaine.net      procmail</span><br><span class="line">monmail2@monautredomaine.net      procmail</span><br><span class="line">monmail1@encoreunautredomaine.org procmail</span><br><span class="line">monmail3@encoreunautredomaine.org procmail</span><br></pre></td></tr></table></figure></p><p>“Hashons” le fichier:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ postmap /etc/postfix/transport</span><br></pre></td></tr></table></figure></p><p>Et renseignons la table nouvellement créée dans la configuration Postfix en ajoutant à <code>/etc/postfix/main.cf</code> ces lignes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">procmail_destination_recipient_limit = 1</span><br><span class="line">transport_maps = hash:/etc/postfix/transport</span><br></pre></td></tr></table></figure></p><p>Détaillons maintenant ce “transport” dans <code>/etc/postfix/master.cf</code>; un peu à la manière de ce que l’on a fait pour SpamAssassin on ajoute à la fin:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">procmail unix - n n - - pipe</span><br><span class="line">  flags=RO user=vmail argv=/usr/bin/procmail -t -m USER=$&#123;user&#125; EXTENSION=$&#123;extension&#125; DOMAIN=$&#123;nexthop&#125; /etc/postfix/procmailrc.common</span><br></pre></td></tr></table></figure></p><p>On renseigne ici l’utilisateur paramétré pour gérer nos comptes mails virtuels, un fichier de configuration (/etc/postfix/procmailrc.common`) et des variables qui pourront être utilisées dans ce fichier. Créons le maintenant avec le contenu suivant.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MAILDIR=&quot;$HOME/$DOMAIN/$USER&quot;</span><br><span class="line">DEFAULT=&quot;$MAILDIR/&quot;</span><br><span class="line">VERBOSE=ON</span><br><span class="line">#each user will set his own log file</span><br><span class="line">LOGFILE=&quot;/var/vmail/proclog-$DOMAIN-$USER&quot;</span><br><span class="line">NL=&quot;</span><br><span class="line">&quot;</span><br><span class="line">WS=&quot;    &quot;</span><br><span class="line">SWITCHRC=&quot;$HOME/$DOMAIN/.procmail/$USER&quot;</span><br></pre></td></tr></table></figure></p><p>Pour faire simple, cela nous permet de créer dans le répertoire correspondant à notre domaine (<em>/var/vmail/mondomaine.tld</em> pour suivre notre exemple) un dossier <code>.procmail</code> qui pourra contenir des fichiers au nom de chaque user. Chaque fichier definira les règles procmail concernant cet utilisateur. Ajoutons donc une règle Procmail pour l’utilisateur “moi” en insérant dans un fichier <code>/var/vmail/mondomaine.tld/.procmail/moi</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">:0fw: spamassassin.lock</span><br><span class="line">* &lt; 256000</span><br><span class="line">| spamc</span><br><span class="line"></span><br><span class="line">:0:</span><br><span class="line">* ^X-Spam-Status: Yes</span><br><span class="line">&#123;</span><br><span class="line">  # Move and mark as read</span><br><span class="line">  # First deliver to maildir so LASTFOLDER gets set</span><br><span class="line">  :0 c</span><br><span class="line">  .Spam/new</span><br><span class="line"></span><br><span class="line">  # Manipulate the filename</span><br><span class="line">  :0 ai</span><br><span class="line">  * LASTFOLDER ?? ()\/[^/]+^^</span><br><span class="line">  |mv &quot;$LASTFOLDER&quot; &quot;$MAILDIR/.Spam/cur/$MATCH:2,S&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Cette configuration nous permet de marquer comme lus et de ranger dans un dossier Spam les messages qui ont été précédemment flaggés par SpamAssassin. Pour plus d’info sur la syntaxe Procmail, vous pouvez consulter <a href="https://wiki.archlinux.org/index.php/Procmail" target="_blank" rel="noopener">ce wiki</a>.</p><p>Reloadons Postfix:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload postfix</span><br></pre></td></tr></table></figure></p><p>Il manque juste une petite chose pour que notre système fonctionne, c’est que l’on a pas de répertoire “Spam”, et sans ça, notre règle Procmail ne peut fonctionner. Dans <code>/etc/dovecot/conf.d/15-mailboxes.conf</code>, dans la section <code>namespace inbox</code> là ou sont déclarés les répertoires avec une fonction particulière (Trash, Send…), nous allons configurer la création automatique d’un répertoire “Spam” en ajoutant la configuration suivante:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mailbox Spam &#123;</span><br><span class="line">  auto = subscribe</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>On reload Dovecot:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl reload dovecot</span><br></pre></td></tr></table></figure></p><p>Voilà, si vous allez sur le webmail (déconnectez-vous et reconnectez si vous étiez déjà connecté), vous devriez maintenant voir un répertoire Spam. Et si vous envoyez un test de spam, celui ci devrait se retrouver en “lu” dans le répertoire Spam.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Recycler une tablette Android en cadre photo</title>
      <link href="/2019/02/20/Recycler-une-tablette-Android-en-cadre-photo/"/>
      <url>/2019/02/20/Recycler-une-tablette-Android-en-cadre-photo/</url>
      
        <content type="html"><![CDATA[<p>L’éternel problème des cadres photos, c’est qu’il faut mettre les photos à jour. Et peu de gens prennent la peine de le faire, que ce soit sur une carte SD ou sur un compte Dropbox ou autre (pour les cadres photos wifi qui cela dit ne sont pas légions).<br>Nous allons voir ici comment utiliser une tablette Android comme cadre photo et la mettre automatiquement à jour avec des photos stockées sur un Raspberry Pi (ou un autre système allumé en permanence).<br><a id="more"></a>Comme évoqué dans <a href="/2018/04/28/Installer-une-galerie-photo-Piwigo-sur-Raspberry-Pi/">cet article</a>, j’utilise Piwigo sur un Raspberry Pi. Toutes mes photos sont donc sur mon Raspberry. Je vais donc pouvoir utiliser cette base de photos pour mettre à jour mon cadre photo numérique.</p><h2 id="Recycler-une-tablette-Android"><a href="#Recycler-une-tablette-Android" class="headerlink" title="Recycler une tablette Android"></a>Recycler une tablette Android</h2><p>J’utilise ici une tablette Asus 7” achetée fin 2014 mais devenue trop lente pour un usage classique. Cependant la satisfaction d’avoir un système qui y met efficacement à jour les photos m’incite à réfléchir à l’aquisition d’une tablette dédiée peu puissante mais plus grande (plus de 10” serait bien).  </p><p>Je me suis largement inspiré de <a href="https://www.howtogeek.com/335161/how-to-turn-an-old-android-tablet-into-an-auto-updating-digital-photo-frame/" target="_blank" rel="noopener">cet excellent article</a> pour cette partie:  </p><ul><li>J’ai acheté <a href="https://www.amazon.com/Anker-Portable-Multi-Angle-Smartphones-Compatible/dp/B00D856NOG/ref=sr_1_5?creativeASIN=B00D856NOG&amp;linkCode=w61&amp;imprToken=i3a7V8h8JSDE1PNDZTjrbQ&amp;slotNum=0&amp;ie=UTF8&amp;qid=1512442407&amp;sr=8-5&amp;keywords=anker+tablet+stand&amp;tag=823814-20" target="_blank" rel="noopener">ce support</a> qui rempli parfaitement son rôle</li><li>J’utilise comme recommandé le logiciel <code>Fotoo</code></li></ul><p>Je dois dire que <code>Fotoo</code> m’apporte entière satisfaction (j’ai acheté la version premium, plus ou moins 2€ je crois). Il me permet entre autre de démarrer et éteindre automatiquement mon cadre aux horaires que je choisis. Il tourne donc le soir en semaine  et toute la journée le week-end :)<br>J’ai choisi que le cadre affiche de façon non aléatoire les photos situées dans un répertoire <code>Dropbox</code>.</p><h2 id="Alimenter-en-photos-le-compte-Dropbox-ou-autre"><a href="#Alimenter-en-photos-le-compte-Dropbox-ou-autre" class="headerlink" title="Alimenter en photos le compte Dropbox (ou autre)"></a>Alimenter en photos le compte Dropbox (ou autre)</h2><p>C’est la brique qu’il me manquait. J’avais toutes mes photos sur un Raspberry Pi, il me manquait le moyen d’en envoyer régulièrement une sélection vers mon compte Dropbox. J’ai décidé d’utiliser <code>Python</code> pour ça. Je ne suis pas expert ni même un utilisateur régulier de ce langage mais la version <code>2.7</code> à l’immense avantage d’être présente à peu près partout. Sur mon serveur dedié ? J’ai Python 2.7. Sur mon Raspberry Pi ? Idem. Mon Macbook Pro ? J’ai aussi Python 2.7.<br>Le <a href="https://github.com/l-vo/photos-picker" target="_blank" rel="noopener">projet</a> est sur github et est en attente de quelques tests supplémentaires pour passer en version <code>1.0.0</code>. Mais aucune fonctionnalité supplémentaire ne devrait être ajoutée d’ici là.  </p><p>Appuyons-nous donc sur cette librairie pour créer un script qui va récupérer des photos sur mon Raspberry et les envoyer vers Dropbox. D’abord il faut installer la librairie:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install photos-picker</span><br></pre></td></tr></table></figure></p><p>Maintenant le script, nommons le <code>upload_photos.py</code> (afin d’améliorer la lisibilité j’ai enlevé les imports):<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Ici le parseur d'argument, très pratique en Python.</span></span><br><span class="line">        <span class="comment"># Je choisi de pouvoir faire varier le nombre de photos à récupérer.</span></span><br><span class="line">        parser = argparse.ArgumentParser()</span><br><span class="line">        desc = <span class="string">"Script allowing to select photos randomly and put them on Dropbox"</span></span><br><span class="line">        parser.description = desc</span><br><span class="line">        parser.add_argument(</span><br><span class="line">            <span class="string">"photo_count"</span>,</span><br><span class="line">            help=<span class="string">"Photo count to upload to Dropbox"</span></span><br><span class="line">        )</span><br><span class="line">        args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Les pickers sont les algorithmes qui fixent la façon de sélectionner les photos. On peut sélectionner les photos:</span></span><br><span class="line">        <span class="comment"># - Aléatoirement (RandomPicker)</span></span><br><span class="line">        <span class="comment"># - Juste les dernières (LastPhotosPicker)</span></span><br><span class="line">        <span class="comment"># - "Intelligement" (SmartPicker), le plus intéressant des algorithmes à mon sens,</span></span><br><span class="line">        <span class="comment">#   sur le nombre de photos à récupérer, il va privilégier les photos récentes,</span></span><br><span class="line">        <span class="comment">#   plus les photos sont anciennes, moins elles ont de chance d'être sélectionnés.</span></span><br><span class="line">        <span class="comment">#   Mais il y a malgré tout obligatoirement des anciennes photos dans la sélection.</span></span><br><span class="line">        picker = SmartPicker(</span><br><span class="line">            <span class="comment"># Répertoire où sont situées mes photos</span></span><br><span class="line">            <span class="string">'/media/dd/piwigo/galleries/Years'</span>,</span><br><span class="line">            int(args.photo_count),</span><br><span class="line">            <span class="comment"># On peut ordonner les photos par date après sélection (1 ou -1),</span></span><br><span class="line">            <span class="comment"># mais je choisi de le faire aléatoirement (0)</span></span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="comment"># Patterns pour les noms de photos, je garde ceux par défaut:</span></span><br><span class="line">            <span class="comment"># *.tif, *.tiff', *.jpg, *.jpeg, *.png</span></span><br><span class="line">            <span class="keyword">None</span>,</span><br><span class="line">            <span class="comment"># Répertoires exclus, celui ci contient des miniatures générées par Piwigo</span></span><br><span class="line">            [<span class="string">'/pwg_representative/'</span>]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Les filtres vont permettre de modifier les photos avant upload</span></span><br><span class="line">        <span class="comment"># J'utilise les deux disponibles:</span></span><br><span class="line">        <span class="comment"># - RotateFilter permet de tourner la photo si besoin en fonction de l'orientation</span></span><br><span class="line">        <span class="comment">#   portée par les données EXIF. L'argument False permet de ne pas modifier</span></span><br><span class="line">        <span class="comment">#   (inversion width/height) les dimensions de l'image en cas de rotation</span></span><br><span class="line">        <span class="comment">#   (des bandes noires seront présentes de chaque côté).</span></span><br><span class="line">        <span class="comment"># - ResizeFilter permet de modifier la taille de l'image en gardant ses</span></span><br><span class="line">        <span class="comment">#   proportions. La largeur ne sera jamais supérieure à 1920 et la hauteur ne</span></span><br><span class="line">        <span class="comment">#   sera jamais supérieure à 1200.</span></span><br><span class="line">        filters = (RotateFilter(<span class="keyword">False</span>), ResizeFilter(<span class="number">1920</span>, <span class="number">1200</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Token Dropbox qui va donner à photos-picker les droits pour uploader les photos</span></span><br><span class="line">        <span class="comment"># (voir https://blogs.dropbox.com/developers/2014/05/generate-an-access-token-for-your-own-account/)</span></span><br><span class="line">        token = <span class="string">'mon-token-Dropbox'</span></span><br><span class="line">        <span class="comment"># L'uploader va permettre de choisir ou envoyer les photos (ici Dropbox)</span></span><br><span class="line">        <span class="comment"># Les uploaders acceptent en 2ème argument le répertoire ou seront stockées</span></span><br><span class="line">        <span class="comment"># les photos. Je me contente du répertoire par défaut: photos-picker</span></span><br><span class="line">        uploader = DropboxUploader(token)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Création d'une instance photos-picker</span></span><br><span class="line">        photos_picker = PhotosPicker(picker, filters, uploader)</span><br><span class="line">        <span class="comment"># Lancement de la récolte, des modifications et de l'upload des photos</span></span><br><span class="line">        photos_picker.run()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Affichage "propre" des erreurs de type Exception</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">"ERROR: &#123;message&#125;"</span>.format(message=err.message))</span><br></pre></td></tr></table></figure></p><p>A noter que comme je n’ai pas spécifié de répertoire à <code>DropboxUploader</code>, le répertoire par défaut de l’uploader qui sera utilisé c’est à dire <code>photos-picker</code> pour <code>DropboxUploader</code>. C’est donc ce répertoire qui doit être configuré dans <code>Fotoo</code>.<br>Photos-picker utilise <a href="https://zopeevent.readthedocs.io/en/latest/" target="_blank" rel="noopener">zope.event</a> qui permet d’émettre des évenement sur l’avancement des tâches. Nous allons utiliser <a href="https://zopeevent.readthedocs.io/en/latest/classhandler.html" target="_blank" rel="noopener">zope.event.classhandler</a> pour écouter ces événements:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@handler(ScanProgressEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">progress_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display pick progression</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param ScanProgressEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    percent = int(event.files_scanned * <span class="number">100</span>/event.files_to_scan)</span><br><span class="line">    print(<span class="string">"\rScanning files: &#123;percent&#125;%"</span>.format(percent=percent), end=<span class="string">''</span>)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> event.end:</span><br><span class="line">        print(<span class="string">"\nPicking photos..."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(StartUploadEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_upload_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display info when an upload starts</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param StartUploadEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    msg = <span class="string">"Upload &#123;rank&#125;/&#123;total&#125;: uploading &#123;filepath&#125;..."</span></span><br><span class="line">    print(msg.format(</span><br><span class="line">        rank=event.upload_file_rank,</span><br><span class="line">        total=event.files_to_upload,</span><br><span class="line">        filepath=event.filepath</span><br><span class="line">    ), end=<span class="string">''</span>)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(EndUploadEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">end_upload_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display info when an upload ends</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param EndUploadEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    msg = <span class="string">"\rUpload &#123;uploaded&#125;/&#123;total&#125;: upload finished for &#123;filepath&#125;"</span></span><br><span class="line">    print(msg.format(</span><br><span class="line">        uploaded=event.uploaded_files,</span><br><span class="line">        total=event.files_to_upload,</span><br><span class="line">        filepath=event.filepath</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(StartFilterEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_filter_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display when a filter start</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param StartFilterEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    msg = <span class="string">"Start filter &#123;filter&#125; for &#123;filepath&#125;"</span></span><br><span class="line">    print(msg.format(filter=event.filter_name(), filepath=event.filepath()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(EndFilterEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">end_filter_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display when a filter end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param EndFilterEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    msg = <span class="string">"End filter &#123;filter&#125; for &#123;filepath&#125;"</span></span><br><span class="line">    print(msg.format(filter=event.filter_name(), filepath=event.filepath()))</span><br></pre></td></tr></table></figure></p><p>Les écouteurs ci-dessus permettent d’avoir une indication de la progression de la récolte des photos, et pour chaque photo récoltée, du début et de fin de chaque filtre et de l’upload. Voilà le code complet du script:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################</span></span><br><span class="line"><span class="comment">#                                                                     #</span></span><br><span class="line"><span class="comment"># Script allowing to select photos randomly and put them on dropbox   #</span></span><br><span class="line"><span class="comment"># (based on photos-picker lib (https://github.com/l-vo/photos-picker) #</span></span><br><span class="line"><span class="comment">#                                                                     #</span></span><br><span class="line"><span class="comment">#                                                                     #</span></span><br><span class="line"><span class="comment"># Requirements: pip install -r requirements.txt                       #</span></span><br><span class="line"><span class="comment">#                                                                     #</span></span><br><span class="line"><span class="comment"># Usage: ./photos_picker.py &lt;photo_count&gt;                             #</span></span><br><span class="line"><span class="comment">#                                                                     #</span></span><br><span class="line"><span class="comment">#######################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> photospicker.picker.pickers.smart_picker <span class="keyword">import</span> SmartPicker</span><br><span class="line"><span class="keyword">from</span> photospicker.uploader.dropbox_uploader <span class="keyword">import</span> DropboxUploader</span><br><span class="line"><span class="keyword">from</span> photospicker.filter.rotate_filter <span class="keyword">import</span> RotateFilter</span><br><span class="line"><span class="keyword">from</span> photospicker.filter.resize_filter <span class="keyword">import</span> ResizeFilter</span><br><span class="line"><span class="keyword">from</span> photospicker.event.scan_progress_event <span class="keyword">import</span> ScanProgressEvent</span><br><span class="line"><span class="keyword">from</span> photospicker.event.start_upload_event <span class="keyword">import</span> StartUploadEvent</span><br><span class="line"><span class="keyword">from</span> photospicker.event.end_upload_event <span class="keyword">import</span> EndUploadEvent</span><br><span class="line"><span class="keyword">from</span> photospicker.event.start_filter_event <span class="keyword">import</span> StartFilterEvent</span><br><span class="line"><span class="keyword">from</span> photospicker.event.end_filter_event <span class="keyword">import</span> EndFilterEvent</span><br><span class="line"><span class="keyword">from</span> zope.event.classhandler <span class="keyword">import</span> handler</span><br><span class="line"><span class="keyword">from</span> photospicker.photos_picker <span class="keyword">import</span> PhotosPicker</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(ScanProgressEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">progress_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display pick progression</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param ScanProgressEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    percent = int(event.files_scanned * <span class="number">100</span>/event.files_to_scan)</span><br><span class="line">    print(<span class="string">"\rScanning files: &#123;percent&#125;%"</span>.format(percent=percent), end=<span class="string">''</span>)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> event.end:</span><br><span class="line">        print(<span class="string">"\nPicking photos..."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(StartUploadEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_upload_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display info when an upload starts</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param StartUploadEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    msg = <span class="string">"Upload &#123;rank&#125;/&#123;total&#125;: uploading &#123;filepath&#125;..."</span></span><br><span class="line">    print(msg.format(</span><br><span class="line">        rank=event.upload_file_rank,</span><br><span class="line">        total=event.files_to_upload,</span><br><span class="line">        filepath=event.filepath</span><br><span class="line">    ), end=<span class="string">''</span>)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(EndUploadEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">end_upload_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display info when an upload ends</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param EndUploadEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    msg = <span class="string">"\rUpload &#123;uploaded&#125;/&#123;total&#125;: upload finished for &#123;filepath&#125;"</span></span><br><span class="line">    print(msg.format(</span><br><span class="line">        uploaded=event.uploaded_files,</span><br><span class="line">        total=event.files_to_upload,</span><br><span class="line">        filepath=event.filepath</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(StartFilterEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_filter_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display when a filter start</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param StartFilterEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    msg = <span class="string">"Start filter &#123;filter&#125; for &#123;filepath&#125;"</span></span><br><span class="line">    print(msg.format(filter=event.filter_name(), filepath=event.filepath()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler(EndFilterEvent)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">end_filter_listener</span><span class="params">(event)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Display when a filter end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param EndFilterEvent event: event</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    msg = <span class="string">"End filter &#123;filter&#125; for &#123;filepath&#125;"</span></span><br><span class="line">    print(msg.format(filter=event.filter_name(), filepath=event.filepath()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        parser = argparse.ArgumentParser()</span><br><span class="line">        desc = <span class="string">"Script allowing to select photos randomly and put them on Dropbox"</span></span><br><span class="line">        parser.description = desc</span><br><span class="line">        parser.add_argument(</span><br><span class="line">            <span class="string">"photo_count"</span>,</span><br><span class="line">            help=<span class="string">"Photo count to upload to Dropbox"</span></span><br><span class="line">        )</span><br><span class="line">        args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">        picker = SmartPicker(</span><br><span class="line">            <span class="string">'/media/dd/piwigo/galleries/Years'</span>,</span><br><span class="line">            int(args.photo_count),</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="keyword">None</span>,</span><br><span class="line">            [<span class="string">'/pwg_representative/'</span>]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        filters = (RotateFilter(<span class="keyword">False</span>), ResizeFilter(<span class="number">1920</span>, <span class="number">1200</span>))</span><br><span class="line"></span><br><span class="line">        token = <span class="string">'mon-token-Dropbox'</span></span><br><span class="line">        uploader = DropboxUploader(token)</span><br><span class="line"></span><br><span class="line">        photos_picker = PhotosPicker(picker, filters, uploader)</span><br><span class="line">        photos_picker.run()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">"ERROR: &#123;message&#125;"</span>.format(message=err.message))</span><br></pre></td></tr></table></figure></p><h2 id="Planification-de-la-tache"><a href="#Planification-de-la-tache" class="headerlink" title="Planification de la tâche"></a>Planification de la tâche</h2><p>Il suffit maintenant d’ajouter notre script dans crontab (<code>crontab -e</code>):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Photoframe</span><br><span class="line">0 6 * * 1-5 /media/dd/pyscripts/src/photo/upload_photos.py 200 &gt;/var/log/upload_photos.log 2&gt;&amp;1</span><br><span class="line">0 6 * * 6-7 /media/dd/pyscripts/src/photo/upload_photos.py 1000 &gt;/var/log/upload_photos.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></p><p>Je change ainsi mon lot de photos tous les jours. Du lundi au vendredi, je charge un nombre de photo plus restreint (200) par rapport au week-end (1000) ou le cadre photo reste allumé toute la journée.<br>Dans ke fichier <code>/var/log/upload_photos.log</code>, je loggue les infos de progression émises par les écouteurs précédemment mis en place (et les éventuelles erreurs au cas où).</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><h3 id="Vue-d’ensemble"><a href="#Vue-d’ensemble" class="headerlink" title="Vue d’ensemble"></a>Vue d’ensemble</h3><p>Avec un Raspberry, une tablette et quelques scripts, j’ai désormais la possibilité de partager mes photos (merci <a href="https://fr.piwigo.org/" target="_blank" rel="noopener">Piwigo</a>), mais aussi d’en transférer journalièrement sur ma tablette pour avoir l’équivalent d’un cadre photo boosté.</p><h3 id="L’architecture-du-Raspberry-en-question"><a href="#L’architecture-du-Raspberry-en-question" class="headerlink" title="L’architecture du Raspberry en question ?"></a>L’architecture du Raspberry en question ?</h3><p>Un petit bémol cependant, j’ai régulièrement des <em>segmentation fault</em> sur <code>photos-picker</code> lorsque je travaille sur un grand nombre de photos. L’architecture (ou peut être simplement la puissance ?) du Raspberry Pi 3 semble montrer ses limites (qui ont aussi nécessité le contournement pour Piwigo que j’ai décrit dans <a href="/2018/04/28/Installer-une-galerie-photo-Piwigo-sur-Raspberry-Pi/">mon article précédent</a>). Un Raspberry like plus puissant ou mieux un petit PC qui ne soit pas limité par une architecture <code>ARM</code> serait sûrement idéal.<br>On peut évidement penser aussi à un serveur dedié à condition d’avoir une capacité de disque assez importante pour stocker toutes nos photos mais aussi un débit en upload suffisant pour que chaque transfert de photos vers le serveur ne soit pas un calvaire (et avec le poids des photos aujourd’hui, ça peut vite l’être).</p>]]></content>
      
      
      
        <tags>
            
            <tag> Raspberry_Pi </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Patcher avec Composer</title>
      <link href="/2018/11/24/Patcher-avec-Composer/"/>
      <url>/2018/11/24/Patcher-avec-Composer/</url>
      
        <content type="html"><![CDATA[<p>Récemment, sans rien que nous ayons modifié de particulier, <code>simple-phpunit</code> (qui lance nos tests Symfony) ne fonctionnait plus. Plus embêtant encore, ce problème faisait échouer nos CI. Après une courte investigation, il s’est avéré que <code>simple-phpunit</code> (maintenu par Symfony) reposait sur des branches de PHPUNIT. Certaines anciennes branches ayant été supprimés du repository (probablement car elles vont cesser d’être maintenues), <code>simple-phpunit</code> ne pouvait plus fonctionner.</p><h1 id="Quelle-solution"><a href="#Quelle-solution" class="headerlink" title="Quelle solution ?"></a>Quelle solution ?</h1><a id="more"></a><p>Le problème a rapidemment été corrigé du côté de Symfony (<a href="https://github.com/symfony/symfony/pull/29265)" target="_blank" rel="noopener">https://github.com/symfony/symfony/pull/29265)</a>. Sur notre projet nous sommes sur la version <code>3.4.17</code> de <code>symfony/phpunit-bridge</code>. Le fix a été mergé sur la branche <code>3.4</code>, mais nous ne pouvons pas en bénéficier via Composer tant qu’un nouveau tag n’est pas créé et poussé sur Packagist.<br>La solution la plus simple est de passer sur la branche <code>3.4</code>:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// composer.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="string">"require-dev"</span>: &#123;</span><br><span class="line">      <span class="string">"symfony/phpunit-bridge"</span>: <span class="string">"dev-3.4"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer update symfony/phpunit-bridge</span><br></pre></td></tr></table></figure><p>Seulement problème, on abandonne le fait d’être sur une version “tagguée”, c’est à dire une version stable.<br>Une meilleure solution va être d’appliquer un patch via un plugin Composer.</p><h1 id="Plugin-composer"><a href="#Plugin-composer" class="headerlink" title="Plugin composer"></a>Plugin composer</h1><p>Plusieurs plugins Composer pour appliquer des patches existent. J’ai choisi le premier affiché par Google, il semblait maintenu et la doc claire: <a href="https://github.com/cweagans/composer-patches" target="_blank" rel="noopener">cweagans/composer-patches</a>. Installons le:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer require cweagans/composer-patches ^1.0</span><br></pre></td></tr></table></figure></p><p>Avant de s’intéresser au patch proprement dit, assurons nous d’être sur la dernière version de <code>symfony/phpunit-bridge</code> (en accord avec nos contraintes de version).<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// composer.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="string">"require-dev"</span>: &#123;</span><br><span class="line">      <span class="string">"symfony/phpunit-bridge"</span>: <span class="string">"^3.4.18"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer update symfony/phpunit-bridge</span><br></pre></td></tr></table></figure><p>La version <code>3.4.18</code> se trouve installée.</p><h1 id="Creation-du-patch"><a href="#Creation-du-patch" class="headerlink" title="Création du patch"></a>Création du patch</h1><p>Nous sommes sur le tag <code>3.4.18</code> mais le fix a été appliqué sur un commit plus avancé de la branche <code>3.4</code>. Il va nous falloir générer la différence (le patch) entre le commit sur lequel porte le tag <code>3.4.18</code> et le commit fixant le bug. Le fait que la modification ne porte que sur le fichier <code>simple-phpunit</code> et qu’aucune autre modification n’ai été faite sur ce fichier nous facilite grandement la tâche:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/symfony/symfony.git</span><br><span class="line">$ <span class="built_in">cd</span> symfony</span><br><span class="line">$ git diff 3.4.18..dbb0f2 src/Symfony/Bridge/PhpUnit/bin/simple-phpunit &gt; phpunit-bridge.patch</span><br></pre></td></tr></table></figure></p><p><code>dbb0f2</code> étant le commit du fix, voici le contenu du fichier de patch ainsi généré:<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/src/Symfony/Bridge/PhpUnit/bin/simple-phpunit b/src/Symfony/Bridge/PhpUnit/bin/simple-phpunit</span><br><span class="line">index bcfc432f8a..af60eb0f8c 100755</span><br><span class="line"><span class="comment">--- a/src/Symfony/Bridge/PhpUnit/bin/simple-phpunit</span></span><br><span class="line"><span class="comment">+++ b/src/Symfony/Bridge/PhpUnit/bin/simple-phpunit</span></span><br><span class="line"><span class="meta">@@ -11,7 +11,7 @@</span></span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line"> // Please update when phpunit needs to be reinstalled with fresh deps:</span><br><span class="line"><span class="deletion">-// Cache-Id-Version: 2017-11-22 09:30 UTC</span></span><br><span class="line"><span class="addition">+// Cache-Id-Version: 2018-11-20 15:30 UTC</span></span><br><span class="line"></span><br><span class="line"> error_reporting(-1);</span><br><span class="line"></span><br><span class="line">@@ -63,26 +63,7 @@ if (!file_exists("$PHPUNIT_DIR/phpunit-$PHPUNIT_VERSION/phpunit") || md5_file(__</span><br><span class="line">     if (file_exists("phpunit-$PHPUNIT_VERSION")) &#123;</span><br><span class="line">         passthru(sprintf('\\' <span class="comment">=== DIRECTORY_SEPARATOR ? '(del /S /F /Q %s &amp; rmdir %1$s) &gt;nul': 'rm -rf %s', "phpunit-$PHPUNIT_VERSION"));</span></span><br><span class="line">     &#125;</span><br><span class="line"><span class="deletion">-    if (extension_loaded('openssl') &amp;&amp; ini_get('allow_url_fopen') &amp;&amp; !isset($_SERVER['http_proxy']) &amp;&amp; !isset($_SERVER['https_proxy'])) &#123;</span></span><br><span class="line"><span class="deletion">-        $remoteZip = "https://github.com/sebastianbergmann/phpunit/archive/$PHPUNIT_VERSION.zip";</span></span><br><span class="line"><span class="deletion">-        $remoteZipStream = @fopen($remoteZip, 'rb');</span></span><br><span class="line"><span class="deletion">-        if (!$remoteZipStream) &#123;</span></span><br><span class="line"><span class="deletion">-            throw new \RuntimeException("Could not find $remoteZip");</span></span><br><span class="line"><span class="deletion">-        &#125;</span></span><br><span class="line"><span class="deletion">-        stream_copy_to_stream($remoteZipStream, fopen("$PHPUNIT_VERSION.zip", 'wb'));</span></span><br><span class="line"><span class="deletion">-    &#125; elseif ('\\' === DIRECTORY_SEPARATOR) &#123;</span></span><br><span class="line"><span class="deletion">-        passthru("certutil -urlcache -split -f \"https://github.com/sebastianbergmann/phpunit/archive/$PHPUNIT_VERSION.zip\" $PHPUNIT_VERSION.zip");</span></span><br><span class="line"><span class="deletion">-    &#125; else &#123;</span></span><br><span class="line"><span class="deletion">-        @unlink("$PHPUNIT_VERSION.zip");</span></span><br><span class="line"><span class="deletion">-        passthru("wget -q https://github.com/sebastianbergmann/phpunit/archive/$PHPUNIT_VERSION.zip");</span></span><br><span class="line"><span class="deletion">-    &#125;</span></span><br><span class="line"><span class="deletion">-    if (!class_exists('ZipArchive')) &#123;</span></span><br><span class="line"><span class="deletion">-        throw new \Exception('simple-phpunit requires the "zip" PHP extension to be installed and enabled in order to uncompress the downloaded PHPUnit packages.');</span></span><br><span class="line"><span class="deletion">-    &#125;</span></span><br><span class="line"><span class="deletion">-    $zip = new ZipArchive();</span></span><br><span class="line"><span class="deletion">-    $zip-&gt;open("$PHPUNIT_VERSION.zip");</span></span><br><span class="line"><span class="deletion">-    $zip-&gt;extractTo(getcwd());</span></span><br><span class="line"><span class="deletion">-    $zip-&gt;close();</span></span><br><span class="line"><span class="addition">+    passthru("$COMPOSER create-project --no-install --prefer-dist --no-scripts --no-plugins --no-progress --ansi phpunit/phpunit phpunit-$PHPUNIT_VERSION \"$PHPUNIT_VERSION.*\"");</span></span><br><span class="line">     chdir("phpunit-$PHPUNIT_VERSION");</span><br><span class="line">     if ($SYMFONY_PHPUNIT_REMOVE) &#123;</span><br><span class="line">         passthru("$COMPOSER remove --no-update ".$SYMFONY_PHPUNIT_REMOVE);</span><br><span class="line">@@ -214,7 +195,7 @@ if ($components) &#123;</span><br><span class="line">             // STATUS_STACK_BUFFER_OVERRUN (-1073740791/0xC0000409)</span><br><span class="line">             // STATUS_ACCESS_VIOLATION (-1073741819/0xC0000005)</span><br><span class="line">             // STATUS_HEAP_CORRUPTION (-1073740940/0xC0000374)</span><br><span class="line"><span class="deletion">-            if ($procStatus &amp;&amp; ('\\' !== DIRECTORY_SEPARATOR || !extension_loaded('apcu') || !ini_get('apc.enable_cli') || !in_array($procStatus, array(-1073740791, -1073741819, -1073740940)))) &#123;</span></span><br><span class="line"><span class="addition">+            if ($procStatus &amp;&amp; ('\\' !== DIRECTORY_SEPARATOR || !extension_loaded('apcu') || !filter_var(ini_get('apc.enable_cli'), FILTER_VALIDATE_BOOLEAN) || !in_array($procStatus, array(-1073740791, -1073741819, -1073740940)))) &#123;</span></span><br><span class="line">                 $exit = $procStatus;</span><br><span class="line">                 echo "\033[41mKO\033[0m $component\n\n";</span><br><span class="line">             &#125; else &#123;</span><br></pre></td></tr></table></figure></p><p>Il reste cependant un problème à corriger, le patch porte sur <code>src/Symfony/Bridge/PhpUnit/bin/simple-phpunit</code> car nous l’avons généré depuis le repository Symfony. Dans notre projet le chemin n’est pas le même: <code>vendor/symfony/phpunit-bridge/bin/simple-phpunit</code>. Il faut donc modifier les paths dans notre fichier patch <code>phpunit-bridge.patch</code>.<br>On obtient (les autres lignes restent inchangées):<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/vendor/symfony/phpunit-bridge/bin/simple-phpunit b/vendor/symfony/phpunit-bridge/bin/simple-phpunit</span><br><span class="line">index bcfc432f8a..af60eb0f8c 100755</span><br><span class="line"><span class="comment">--- a/vendor/symfony/phpunit-bridge/bin/simple-phpunit</span></span><br><span class="line"><span class="comment">+++ b/vendor/symfony/phpunit-bridge/bin/simple-phpunit</span></span><br><span class="line"><span class="meta">@@ -11,7 +11,7 @@</span></span><br></pre></td></tr></table></figure></p><h1 id="Appliquons-le-patch"><a href="#Appliquons-le-patch" class="headerlink" title="Appliquons le patch"></a>Appliquons le patch</h1><p>Après avoir déplacé le <code>phpunit-bridge.patch</code> à la racine de notre projet (par exemple), il faut le renseigner dans notre composer.json:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  <span class="string">"extra"</span>: &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="string">"patches"</span>: &#123;</span><br><span class="line">      <span class="string">"symfony/phpunit-bridge"</span>: &#123;</span><br><span class="line">        <span class="string">"Fix impossible to download phpunit zip since minor version branches has been deleted"</span>: <span class="string">"phpunit-bridge.patch"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>On déclenche ensuite l’application du patch:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer update symfony/phpunit-bridge</span><br></pre></td></tr></table></figure></p><p>On peut constater que que Composer applique le patch conformément au fichier que l’on a généré. Lorsque nous monterons de version <code>symfony/phpunit-bridge</code>, le fix sera déjà intégré dans la version téléchargée et le patch ne sera plus utile.</p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>Nous venons de voir comment générer un patch et l’appliquer à l’aide de Composer. Ainsi le fix sera présent que l’on déploie le projet “from scratch” ou lorsque l’on upgradera <code>symfony/phpunit-bridge</code>. Un fichier patch peut être bien plus compliqué à générer qu’ici (notamment s’il y a d’autres différences entre le dernier tag et le commit comprenant le fix), mais la méthodologie reste la même.</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Partager des volumes Docker via AFP sur Mac</title>
      <link href="/2018/08/16/Partager-des-volumes-Docker-via-AFP-sur-OS-X/"/>
      <url>/2018/08/16/Partager-des-volumes-Docker-via-AFP-sur-OS-X/</url>
      
        <content type="html"><![CDATA[<p>Suite à la lecture de <a href="https://jolicode.com/blog/ma-stack-de-developpement-avec-docker-sous-macos-x" target="_blank" rel="noopener">cet article</a>, je voudrais faire un court retour d’expérience sur une solution alternative de partage de volumes sous macOS (anciennement OS X) que je privilégie depuis un certain temps. </p><h2 id="La-problematique"><a href="#La-problematique" class="headerlink" title="La problématique"></a>La problématique</h2><p>Si depuis que j’ai goûté à Docker, je ne peux m’en passer pour mes conteneurs de développement, j’ai vite été confronté à des limitations sur OS X:</p><ul><li>Les performances médiocres lorsque je partage un dossier entre ma machine hôte et mon conteneur (les projects Symfony sont très lents même sans activer XDebug).</li><li>Les fonctionnalités limités du volume partagé. Il ne permet par exemple pas d’utiliser les ACL comme préconisé par Symfony pour jongler entre les actions du server web (user www-data) et celles de la console (user courant).  <a id="more"></a></li></ul><h2 id="Configurations-de-volume-cached-et-delegated"><a href="#Configurations-de-volume-cached-et-delegated" class="headerlink" title="Configurations de volume cached et delegated"></a>Configurations de volume cached et delegated</h2><p>Conscient que cette solution ne réglerait de toute façon pas mon deuxième problème (la gestion des ACL), j’ai quand même voulu tester les performances des configurations de volume <code>cached</code> et <code>delegated</code> (plus d’infos sur ces configurations <a href="https://docs.docker.com/docker-for-mac/osxfs-caching/#tuning-with-consistent-cached-and-delegated-configurations" target="_blank" rel="noopener">ici</a>). Pour du développement, j’ai besoin que les modifications sur les fichiers faites depuis ma machine hôte soient immédiatement repércutées dans mon conteneur. Je choisis donc la configuration <code>delegated</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml d'un conteneur Symfony</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">  services:</span></span><br><span class="line"><span class="attr">    symfony:</span></span><br><span class="line">      <span class="comment"># ...</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/Users/laurent/dev/my-symfony-project:/var/www/html:delegated</span></span><br></pre></td></tr></table></figure><p>Alors oui, les performances dans mon cas d’utilisation sont meilleures qu’avec la configuration par defaut (<code>consistent</code>, c’est à dire synchronisation immédiate dans les deux sens). Mais dans une situation de développement, les pages sont encore beaucoup trop longues à charger et l’utilisation de XDebug reste compliquée.</p><h2 id="Volumes-partages-avec-le-systeme-hote-via-AFP"><a href="#Volumes-partages-avec-le-systeme-hote-via-AFP" class="headerlink" title="Volumes partagés avec le système hôte via AFP"></a>Volumes partagés avec le système hôte via AFP</h2><h3 id="Principe"><a href="#Principe" class="headerlink" title="Principe"></a>Principe</h3><p>Plutôt que de partager le volume avec la machine hôte, ce qui diminue les performances et limite les fonctionalités du système de fichier, on va essayer de rester plus proche de la philosophie de Docker: les volumes sont partagés entre différents conteneurs et c’est un conteneur qui nous permet d’accéder à notre système de fichier. A savoir un conteneur Netatalk (protocole AFP). Alors bien sûr il y a des inconvénients, et pas des moindres qui vont en rebuter plus d’un:</p><ul><li>Vous ne pouvez accéder à la source de vos projets si votre conteneur AFP n’est pas démarré</li><li>Votre IDE va accéder à vos fichiers via un partage réseau et peut avoir des difficultés à les analyser</li></ul><p>Je privilégie cependant cette solution, car j’ai enfin des temps de chargement acceptables sur mon projet et une gestion de droits (ACL) fonctionnelle. J’utilise l’IDE PHPStorm d’Intellij qui n’est pas un éditeur des plus légers et une fois la première indexation faite, ça fonctionne plutôt bien. Si vous choisissez d’utiliser un partage via AFP sur plusieurs projets, il faut que vous ayez un seul conteneur AFP qui va servir les fichiers de tous vos projets. C’est ce que nous allons faire dans la prochaine section.</p><h3 id="Mise-en-place"><a href="#Mise-en-place" class="headerlink" title="Mise en place"></a>Mise en place</h3><h4 id="Creation-d’un-volume-externe"><a href="#Creation-d’un-volume-externe" class="headerlink" title="Creation d’un volume externe"></a>Creation d’un volume externe</h4><p>Ce volume va contenir le code source du projet sur lequel vous développez.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker volume create myproject_files</span><br></pre></td></tr></table></figure></p><h4 id="Conteneur-du-projet"><a href="#Conteneur-du-projet" class="headerlink" title="Conteneur du projet"></a>Conteneur du projet</h4><p>(Symfony dans notre exemple)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml d'un conteneur Symfony</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">  services:</span></span><br><span class="line"><span class="attr">    symfony:</span></span><br><span class="line">      <span class="comment"># ...</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">        - myproject_files:</span><span class="string">/var/www/html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  myproject_files:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="Conteneur-Netatalk"><a href="#Conteneur-Netatalk" class="headerlink" title="Conteneur Netatalk"></a>Conteneur Netatalk</h4><p>C’est le conteneur respectant le protocole AFP qui va servier les fichiers de notre (nos) projet(s).</p><h5 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile:"></a>Dockerfile:</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netatalk/Dockerfile</span></span><br><span class="line"><span class="keyword">FROM</span> cptactionhank/netatalk</span><br><span class="line"></span><br><span class="line"><span class="comment"># On va ici aussi utiliser les ACL afin de ne pas avoir de problème de droits sur</span></span><br><span class="line"><span class="comment"># nos fichiers qui peuvent provenir de plusieurs conteneurs avec des users différents</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; apt-get install acl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> afp.conf /etc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> run.sh /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod u+x /run.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"/run.sh"</span>]</span></span><br></pre></td></tr></table></figure><h5 id="Fichier-de-configuration-Netatalk"><a href="#Fichier-de-configuration-Netatalk" class="headerlink" title="Fichier de configuration Netatalk:"></a>Fichier de configuration Netatalk:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">;netatalk/afp.conf</span><br><span class="line">[Global]</span><br><span class="line">; output log entries to stdout instead of syslog</span><br><span class="line">; it is the docker way where the engine in turn</span><br><span class="line">; can direct the log output to a storage backend</span><br><span class="line">log file = /dev/stdout</span><br><span class="line"></span><br><span class="line">; enable guest access as well as user accounts</span><br><span class="line">uam list = uams_guest.so uams_dhx2.so uams_dhx.so</span><br><span class="line"></span><br><span class="line">[Share]</span><br><span class="line">path = /media/share</span><br><span class="line">; when the environment variable `AFP_USER` is not</span><br><span class="line">; provided valid users list will be empty and</span><br><span class="line">; thus be available for both guests and</span><br><span class="line">; authenticated users</span><br><span class="line">valid users = user1</span><br></pre></td></tr></table></figure><p><code>user1</code> utilisé ci-dessus en tant qu’utilisateur valide doit correspondre à la variable d’environnement <code>AFP_USER</code> du fichier docker-compose.yml (voir plus loin).</p><h5 id="Fichier-lance-au-demarrage-du-conteneur"><a href="#Fichier-lance-au-demarrage-du-conteneur" class="headerlink" title="Fichier lancé au démarrage du conteneur:"></a>Fichier lancé au démarrage du conteneur:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netatalk/run.sh</span></span><br><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Grace à ces ACL, le user 1000 (user1) pourra accéder aux fichiers pouvant</span></span><br><span class="line"><span class="comment"># appartenir à des utilisateurs de différents projets avec des UID différents.</span></span><br><span class="line"><span class="comment"># La valeur 1000 doit être la même que celles des variables d'environnement</span></span><br><span class="line"><span class="comment"># AFP_UID et AFP_GID dans le fichier docker-compose.yml.</span></span><br><span class="line">setfacl -dR -m u:1000:rwX /media/share</span><br><span class="line">setfacl -R -m u:1000:rwX /media/share</span><br><span class="line"></span><br><span class="line">/docker-entrypoint.sh</span><br></pre></td></tr></table></figure><h5 id="Fichier-docker-compose"><a href="#Fichier-docker-compose" class="headerlink" title="Fichier docker-compose:"></a>Fichier docker-compose:</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  afp:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">netatalk</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line">      <span class="comment"># Le port 548 du conteneur n'est pas mappé au port 548 de la machine hôte.</span></span><br><span class="line">      <span class="comment"># Cela ne fonctionne plus depuis OS X Sierra.</span></span><br><span class="line">      <span class="comment"># veuillez donc choisir un autre port; 1548 par example.</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">1548</span><span class="string">:548</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - myproject_files:</span><span class="string">/media/share/myproject</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_USER=user1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_PASSWORD=user1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_UID=1000</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_GID=1000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  myproject_files:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Utilisation"><a href="#Utilisation" class="headerlink" title="Utilisation"></a>Utilisation</h3><p>Votre conteneur AFP peut recevoir des volumes de différents projets, je vous conseille de procéder ainsi, démarrer un conteneur AFP par projet sera vite fastidieux lorsque vous voudrez consulter des sources de différents projets.</p><p>Pour intégrer le volume partagé d’un projet supplémentaire, il suffit de le rajouter dans les sections volumes:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  afp:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">netatalk</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">1548</span><span class="string">:548</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - myproject_files:</span><span class="string">/media/share/myproject</span></span><br><span class="line"><span class="attr">      - myotherproject_files:</span><span class="string">/media/share/myotherproject</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_USER=user1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_PASSWORD=user1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_UID=1000</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">AFP_GID=1000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  myproject_files:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  myotherproject_files:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Cette solution n’a pas pour prétention ni d’être meilleure que les autres, ni de résoudre tous les problèmes (d’ailleurs elle ne le fait pas !). Elle peut cependant être intéressante pour les personnes qui ne seraient pas tout à fait satisfaites des volumes partagés de façon traditionnelle entre machine hôte et conteneur et qui sont prêtes à faire d’autres compromis.</p><h2 id="Edit-04-11-2018"><a href="#Edit-04-11-2018" class="headerlink" title="Edit 04/11/2018"></a>Edit 04/11/2018</h2><p>J’ai depuis testé <a href="http://docker-sync.io/" target="_blank" rel="noopener">docker-sync</a>. Le principe reste le même, les fichiers demeurent sur un volume externe et un autre conteneur se charge de les “servir”. Là où via AFP, le volume était accessible via un partage réseau, docker-sync crée un conteneur qui se charge de surveiller et de garder synchronisés un dossier local et le volume externe utilisé par l’application.</p><p>J’ai d’abord utilisé la paramétrage <code>host_disk_mount_mode</code> par defaut (<code>cached</code>) puis j’ai utilisé la valeur <code>delegated</code> qui apporte une synchronisation de ma machine hôte vers mon conteneur plus rapide. Malgré ça ce n’est aujourd’hui pas tout à fait parfait, j’ai encore quelques cas ou les modifs que je fais depuis mon IDE ne sont pas repercutés dans mon conteneur (la plupart du temps lors d’un changement de branche). Le seul workaround que j’ai trouvé jusqu’à présent est de redémarrer docker-sync puis le conteneur de mon application. ça reste malgré tout la solution que je privilégie et conseille aujourd’hui.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sécuriser ses conteneurs Docker en production</title>
      <link href="/2018/07/19/Securiser-ses-conteneurs-Docker-en-production/"/>
      <url>/2018/07/19/Securiser-ses-conteneurs-Docker-en-production/</url>
      
        <content type="html"><![CDATA[<p>Docker est à l’origine conçu pour créer des conteneurs à la volée et effectuer des developpements/tests dans différents environments. Mais sa simplicité d’utilisation et son écosystème grandissant pousse de plus en plus ses adeptes à vouloir l’utiliser en prod. D’autant que de nouveaux outils (Kubernetes, Swarm…) et des améliorations récentes (user namespaces, variables d’environnement dans les docker-compose…) vont dans ce sens.  </p><p>Malheureusement les conteneurs Docker sont de base assez peu sécurisés. Nous allons<br>voir quelques astuces simples pour limiter les possibilités d’attaques lorsque vous déploierez vos conteneurs en production. </p><a id="more"></a><p>Tout d’abord je vous recommande la lecture de cette article: <a href="https://w3blog.fr/2016/02/23/docker-securite-10-bonnes-pratiques/" target="_blank" rel="noopener">https://w3blog.fr/2016/02/23/docker-securite-10-bonnes-pratiques/</a>. Bien que datant un peu, les préceptes qu’il aborde sont encore d’actualité. Je vais essayer de le compléter par quelques autres conseils pour sécuriser votre conteneur.</p><h2 id="Supprimer-la-creation-automatique-de-regles-iptables"><a href="#Supprimer-la-creation-automatique-de-regles-iptables" class="headerlink" title="Supprimer la création automatique de règles iptables"></a>Supprimer la création automatique de règles iptables</h2><p>Par défaut, le daemon Docker créé les règles iptables dont il a besoin. Mais si vous êtes sur un système hôte avec plusieurs conteneurs et que vous le sécurisez via iptables et fail2ban (ou équivalent), vous allez vouloir garder le contrôle sur les règles qui vont être créées dans votre iptables. Celà se fait en modifiant les options du service Docker:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=&quot;--iptables=false&quot;</span><br></pre></td></tr></table></figure></p><p>Attention, lorsque vous modifiez les options du daemon, vous aurez la mauvaise surprise de voir que tous vos conteneurs, volumes etc sont à recréer. Vous pouvez les retrouver en revenant aux anciennes options du daemon; mais à garder à l’esprit si vous aviez prévu de faire cette modif en prod sans interruption de service.</p><h2 id="Utiliser-les-user-namespaces"><a href="#Utiliser-les-user-namespaces" class="headerlink" title="Utiliser les user namespaces"></a>Utiliser les user namespaces</h2><p>Un des problèmes innérants à la sécurité de Docker est le fait que les conteneurs tournent par defaut sur l’utilisateur root. Ce qui signifie que l’utilisateur root dans vos conteneurs a potentiellement les privilèges de l’utilisateur root de votre machine hôte. Oui, ça fait peur. Mais ça c’étant avant la mise en place sur Docker des user namespaces. Les user namespaces vont permettre de mapper les utilisateurs de vos conteneurs à des utilisateurs avec des privilèges plus limités sur votre système hôte. Là encore, la modification s’effectue via les options du daemon Docker:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=&quot;--userns-remap=default&quot;</span><br></pre></td></tr></table></figure></p><p>Une plage d’identifiants va être affecté à l’user/group dockremap dans les fichiers <code>/etc/subuid</code> et <code>/etc/subgid</code> de votre machine hôte et correspondront aux utilisateurs à l’intérieur de vos conteneurs. Un nom d’utilisateur autre que <code>dockremap</code> peut être utilisé si vous le specifiez comme valeur de <code>--userns-remap</code>à la place de <code>default</code>.</p><h2 id="Directive-USER-dans-les-Dockerfile"><a href="#Directive-USER-dans-les-Dockerfile" class="headerlink" title="Directive USER dans les Dockerfile"></a>Directive USER dans les Dockerfile</h2><p>Vous avez maintenant quelques astuces pour protéger mieux vos conteneurs. Mais si vous publiez une image de conteneur “production ready”, la personne qui va la déployer aura-t-elle utilisé les user namespaces ? Une image Docker ayant pour but d’être déployé en production ne devrait jamais démarrer sous l’utilisateur root. Ceci est possible via la directive <code>USER</code> mais on trouve finalement sur le net assez peu d’exemples d’utilisation de cette directive dans le but de sécuriser un conteneur. Voyons voir si nous voulons par exemple créer une image d’un conteneur MySQL sécurisé:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:trusty</span><br><span class="line"></span><br><span class="line"><span class="comment"># Des instructions...</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># On cré un utilisateur aux droits limités</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> adduser --disabled-password --gecos <span class="string">""</span> user1</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># On utilise cet utilisateur</span></span><br><span class="line"><span class="keyword">USER</span> user1</span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"mysqld_safe"</span>]</span></span><br></pre></td></tr></table></figure><p>Et là on se rend compte que user1 n’a pas les privilèges pour lancer mysqld_safe. Une astuce va donc être d’autoriser user1 à lancer mysqld_safe via le fichier <code>sudoers</code>:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:trusty</span><br><span class="line"></span><br><span class="line"><span class="comment"># Des instructions...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># On cré un utilisateur aux droits limités</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> adduser --disabled-password --gecos <span class="string">""</span> user1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># On autorise user1 à lancer mysqld_safe</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"user1 ALL = (root) NOPASSWD: /usr/bin/mysqld_safe"</span> &gt;&gt; /etc/sudoers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># On utilise cet utilisateur</span></span><br><span class="line"><span class="keyword">USER</span> user1</span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"sudo"</span>, <span class="string">"mysqld_safe"</span>]</span></span><br></pre></td></tr></table></figure><p>Le conteneur tourne à présent sous l’utilisateur user1 qui n’a de privilèges que pour lancer mysqld_safe. Si vous rentrez dans le conteneur via <code>docker exec</code>, vous êtes connecté via user1 ce qui limite grandement les possibilités d’une personne mal intentionnée.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Voilà, l’écosystème de Docker en continuelle évolution pousse de plus en plus vers une utilisation en production (et de nombreuses plus ou moins grosses sociétés ont déjà franchi le pas). Il ne faut cependant pas négliger la sécurité qui n’est pas moins importante ou plus facile à mettre en place que dans un système traditionnel sans conteneurs.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Installer une galerie photo (Piwigo) sur Raspberry PI</title>
      <link href="/2018/04/28/Installer-une-galerie-photo-Piwigo-sur-Raspberry-PI/"/>
      <url>/2018/04/28/Installer-une-galerie-photo-Piwigo-sur-Raspberry-PI/</url>
      
        <content type="html"><![CDATA[<h2 id="Quelle-gallerie-photo"><a href="#Quelle-gallerie-photo" class="headerlink" title="Quelle gallerie photo ?"></a>Quelle gallerie photo ?</h2><p>Je cherchais une galerie photo à mettre sur mon Raspberry Pi 3. J’avais précédemment utilisé la galerie propriétaire DSPhoto (Synology) et je cherchais quelque chose s’en rapprochant en terme de fonctionnalités. A savoir:</p><ul><li>Possibilité d’uploader les photos par lot</li><li>Existence d’une application ou au moins d’un site web adapté aux mobiles</li><li>Capacité à présenter les photos en miniatures mais aussi de les télécharger en qualité originale si besoin</li><li>Gestion d’albums privés et possibilité d’y accéder sans identification via un lien</li><li>Support de certains formats vidéos</li></ul><p>Après quelques recherches, j’ai fini par tomber sur Piwigo (<a href="http://fr.piwigo.org/)" target="_blank" rel="noopener">http://fr.piwigo.org/)</a>, une galerie open source avec un système de plugin permettant d’étendre les fonctionnalités de base à celles que je recherchais.<br><a id="more"></a></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>J’ai installé OSMC (<a href="https://osmc.tv/" target="_blank" rel="noopener">https://osmc.tv/</a>) pour faire de mon Raspberry PI un lecteur multimedia. Cette distribution étant basée sur une Debian Stretch, je n’ai pas de mal à trouver dans les dépôts Debian ce dont j’ai besoin pour faire tourner Piwigo; à savoir:</p><ul><li>Nginx</li><li>Php-fpm</li><li>Mysql</li></ul><p>Une fois l’archive de Piwigo décompressée dans le répertoire web de Nginx, je suis les instructions de l’installateur et j’ai peu de temps après une galerie photo fonctionnelle.</p><h2 id="Fonctionnement"><a href="#Fonctionnement" class="headerlink" title="Fonctionnement"></a>Fonctionnement</h2><p>La galerie génère des miniatures des images, soit “en live” lorsque l’on consulte les albums, soit via le traitement par lot dans la partie administration. Une fois les miniatures générées, c’est assez plaisant, le site répond bien, c’est presque parfait. Presque.</p><h2 id="Les-problemes"><a href="#Les-problemes" class="headerlink" title="Les problèmes"></a>Les problèmes</h2><p>là où le bât blesse, c’est précisémment cette génération de miniatures. Quand on a des albums d’un certain nombre de photos (je ne parle pas d’albums de 1000 photos, on reste en dessous des 100 à raison de 5Mo environ par photo), la génération est très longue.   </p><p> Pire, comme toute les générations se lancent en parallèle (une génération par photo affichée, aussi bien à l’affichage de l’album qu’à l’affichage dans le traitement par lot), la charge en vient à planter l’application. A tel point que je suis obligé de redémarrer mon serveur web pour pouvoir à nouveau utiliser la galerie.</p><p>Une autre chose, lorsque je lance la synchronisation des photos que j’ai précédemment uploadé, s’il y a beaucoup de photos à synchroniser, mon Nginx timeout (même si au final la synchro est bien effectuée au bout d’un moment car le Php-fpm lui continue et termine son travail).</p><h2 id="Les-solutions"><a href="#Les-solutions" class="headerlink" title="Les solutions"></a>Les solutions</h2><h3 id="Augmentation-du-timeout-pour-la-synchronisation"><a href="#Augmentation-du-timeout-pour-la-synchronisation" class="headerlink" title="Augmentation du timeout pour la synchronisation"></a>Augmentation du timeout pour la synchronisation</h3><p>Ici, rien de très compliqué, la directive <code>fastcgi_read_timeout</code> règle mon problème, je choisi de la mettre ce timeout à 5 minutes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_read_timeout 300;</span><br></pre></td></tr></table></figure></p><h3 id="Bloquage-de-la-generation-d’image-en-live"><a href="#Bloquage-de-la-generation-d’image-en-live" class="headerlink" title="Bloquage de la génération d’image en live"></a>Bloquage de la génération d’image en live</h3><p>En attendant qu’un script cgi soit mis au point pour générer les miniatures, n’ayant pas trop de temps à consacrer au problème, je choisi de mettre un “hack” dans ma configuration Nginx qui va me permettre de détourner les requêtes de génération qui se lancent en parallèle. Je met ma configuration dans un snippet:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># /etc/nginx/snippets/phpfpm.conf</span><br><span class="line"># Live image loading is too expensive, disable it           </span><br><span class="line">if ($arg_ajaxload != &quot;true&quot;) &#123;                              </span><br><span class="line">    set $redirect 1;                                        </span><br><span class="line">&#125;                                                           </span><br><span class="line">                                                                            </span><br><span class="line">if ($arg_b = &quot;&quot;) &#123;                                          </span><br><span class="line">    set $redirect 1;                                        </span><br><span class="line">&#125;                                                           </span><br><span class="line"></span><br><span class="line"># For videos, needed only if you use the VideoJS plugin         </span><br><span class="line">if ($args ~ &quot;pwg_representative&quot;) &#123;                         </span><br><span class="line">    set $redirect 0;                                          </span><br><span class="line">&#125;                                                           </span><br><span class="line">                                                                            </span><br><span class="line">if ($redirect = 1) &#123;                                        </span><br><span class="line">    rewrite ^/i.php$ /_data/i$args?;                          </span><br><span class="line">    rewrite ^(/_data/i/.*?)(&amp;.*)$ $1 last;                    </span><br><span class="line">&#125;          </span><br><span class="line">                                </span><br><span class="line"># Usual configuration for Nginx with Php-fpm                                </span><br><span class="line">fastcgi_pass unix:/var/run/php5-fpm.sock;        </span><br><span class="line">include fastcgi_params;                          </span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line"></span><br><span class="line"># For fixing synchronization timeout</span><br><span class="line">fastcgi_read_timeout 300;</span><br></pre></td></tr></table></figure></p><p>L’idée est que lorsque les requêtes ne sont pas les requêtes de générations explicites du traitement par lot (c’est à dire les requêtes émises par les images affichées dans les albums ou les images affichées dans le traitement par lot), on transforme l’url de génération en live par une url statique pour chercher la miniature comme si elle avait déjà été générée. On obtient donc une image vide tant que les miniatures ne sont pas générées mais au moins on ne plante pas le serveur.</p><p>Lorsque l’url contient un paramètre <code>b</code>, il s’agit forcément d’une génération implicite de miniature que l’on ne veut pas exécuter donc on applique la redirection. C’est aussi le cas si le paramètre <code>ajaxload</code> est présent et qu’il n’est pas égal à <code>true</code>. Pour les utilisateurs du plugin VideoJS, il ne faut pas appliquer la redirection pour les miniatures de vidéos, on reconnait ces urls par la présence du paramètre <code>pwg_representative</code>.</p><p>Ce snippet doit être inclus dans la configuration Nginx:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># /etc/nginx/sites-enabled/default</span><br><span class="line">server &#123;                                                                   </span><br><span class="line">    listen 80 default_server;</span><br><span class="line">   listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    # Gallery root directory is on my external drive</span><br><span class="line">    root /media/dd/piwigo;                             </span><br><span class="line">                                            </span><br><span class="line">    # Default index file</span><br><span class="line">    index index.php;</span><br><span class="line">                                                                 </span><br><span class="line">    server_name _;                                               </span><br><span class="line">                                                                 </span><br><span class="line">    location / &#123;                                                 </span><br><span class="line">            # First attempt to serve request as file, then       </span><br><span class="line">            # as directory, then fall back to displaying a 404.</span><br><span class="line">            try_files $uri $uri/ =404;                         </span><br><span class="line">    &#125;                                                          </span><br><span class="line">                                                               </span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #                                                                   </span><br><span class="line">    location ~ \.php$ &#123;                                                 </span><br><span class="line">            include snippets/fastcgi-php.conf;                          </span><br><span class="line">            include snippets/phpfpm.conf;                               </span><br><span class="line">    &#125;                                                                   </span><br><span class="line">                                              </span><br><span class="line">    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">    # concurs with nginx&apos;s one                                 </span><br><span class="line">    #                                                          </span><br><span class="line">    location ~ /\.ht &#123;                                         </span><br><span class="line">            deny all;                                          </span><br><span class="line">    &#125;                                                          </span><br><span class="line">                              </span><br><span class="line">    # Hide Nginx version</span><br><span class="line">    server_tokens off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>J’en ai aussi profité pour ajouter une petite sécurité afin que les pages sensibles (administration, installation…) ne soient accessible qu’à partir du réseau local (en clair quand je suis relié à ma box ou connecté à mon WIFI):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Allow sensible pages access only from local network</span><br><span class="line">location ~ ^/(admin.php|upgrade.php|install.php)$ &#123;</span><br><span class="line">        allow 192.168.1.0/24;</span><br><span class="line">        deny all;                               </span><br><span class="line">        include snippets/fastcgi-php.conf;                     </span><br><span class="line">        include snippets/phpfpm.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Ce qui nous donne la configuration complète:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># /etc/nginx/sites-enabled/default</span><br><span class="line">server &#123;                                                                   </span><br><span class="line">    listen 80 default_server;</span><br><span class="line">   listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    # Gallery root directory is on my external drive</span><br><span class="line">    root /media/dd/piwigo;                             </span><br><span class="line">                                            </span><br><span class="line">    # Default index file</span><br><span class="line">    index index.php;</span><br><span class="line">                                                                 </span><br><span class="line">    server_name _;                                               </span><br><span class="line">                                                                 </span><br><span class="line">    location / &#123;                                                 </span><br><span class="line">            # First attempt to serve request as file, then       </span><br><span class="line">            # as directory, then fall back to displaying a 404.</span><br><span class="line">            try_files $uri $uri/ =404;                         </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # Allow sensible pages access only from local network</span><br><span class="line">    location ~ ^/(admin.php|upgrade.php|install.php)$ &#123;</span><br><span class="line">            allow 192.168.1.0/24;</span><br><span class="line">            deny all;                               </span><br><span class="line">            include snippets/fastcgi-php.conf;                     </span><br><span class="line">            include snippets/phpfpm.conf;</span><br><span class="line">    &#125;                                                          </span><br><span class="line">                                                               </span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #                                                                   </span><br><span class="line">    location ~ \.php$ &#123;                                                 </span><br><span class="line">            include snippets/fastcgi-php.conf;                          </span><br><span class="line">            include snippets/phpfpm.conf;                               </span><br><span class="line">    &#125;                                                                   </span><br><span class="line">                                              </span><br><span class="line">    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">    # concurs with nginx&apos;s one                                 </span><br><span class="line">    #                                                          </span><br><span class="line">    location ~ /\.ht &#123;                                         </span><br><span class="line">            deny all;                                          </span><br><span class="line">    &#125;                                                          </span><br><span class="line">                              </span><br><span class="line">    # Hide Nginx version</span><br><span class="line">    server_tokens off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Avec cette configuration:</p><ul><li>je dépose mes photos dans le répertoire <code>galleries</code> de Piwigo (un <code>rsync</code> fait ça très bien)</li><li>je synchronise mes photos déposées (“synchronisation” dans la partie Administration)</li><li>j’utilise le traitement par lot pour générer mes miniatures</li></ul><p>Je dispose désormais d’une galerie pleine de fonctionnalités, skinnable et réactive simplement à partir d’un Raspberry Pi et qui n’est limitée en taille que par la capacité de mon disque dur.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Raspberry_Pi </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debug facile avec XDEBUG</title>
      <link href="/2018/04/06/Debug-facile-avec-XDebug/"/>
      <url>/2018/04/06/Debug-facile-avec-XDebug/</url>
      
        <content type="html"><![CDATA[<p>Intéressons nous au debugging d’applications. Tout développeur en fait continuellement dans ses projects. Souvent de la façon la plus basique qui soit:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $myVar; <span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure></p><p>Mais lorsque l’on a besoin de suivre l’execution dans une pile de plusieurs fonctions et à l’intérieur de chacune d’elle visualiser plusieurs variables pour connaitre le contexte, la méthode ci-dessus ne suffit plus. C’est là qu’intervient XDEBUG.<br><a id="more"></a></p><h2 id="Quand-utiliser-XDEBUG"><a href="#Quand-utiliser-XDEBUG" class="headerlink" title="Quand utiliser XDEBUG ?"></a>Quand utiliser XDEBUG ?</h2><p>Parce qu’il ralentit considérablement l’application, XDEBUG ne doit pas être utilisé dans des environnements de production. En revanche son utilisation est conseillée en environnement de développement. Au delà du débuggage, XDEBUG peut aussi faire du profilage d’application (pour localiser les parties “gourmandes” de votre code), ou encore génerer la couverture de code de vos tests couplé à PHPUnit. Nous nous intéresserons dans cet article uniquement à la partie débuggage.</p><h2 id="Installation-configuration-et-utilisation-basique-de-XDEBUG"><a href="#Installation-configuration-et-utilisation-basique-de-XDEBUG" class="headerlink" title="Installation, configuration et utilisation basique de XDEBUG"></a>Installation, configuration et utilisation basique de XDEBUG</h2><p>Pour installer XDEBUG depuis un serveur Debian, rien de très compliqué:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install php5-xdebug</span><br></pre></td></tr></table></figure></p><h3 id="Communication-avec-le-serveur-ou-se-trouve-l’IDE"><a href="#Communication-avec-le-serveur-ou-se-trouve-l’IDE" class="headerlink" title="Communication avec le serveur ou se trouve l’IDE"></a>Communication avec le serveur ou se trouve l’IDE</h3><p>Si l’application que vous souhaitez débugger n’est pas sur la même machine que votre IDE (ou si votre application est dans une VM ce qui est le plus courant), vous allez devoir configurer le remote host de XDEBUG.</p><ul><li>La méthode la plus simple et qui fonctionne dans la plupart des cas est de mettre le paramètre <code>xdebug.remote_connect_back</code> à <code>On</code> (ou <code>1</code>, ces valeurs étant équivalentes). XDEBUG essaiera simplement de se connecter à l’IP d’ou provient la requête (si un proxy se trouve devant votre application, xdebug checkera les headers <code>HTTP_X_FORWARDED_FOR</code> et <code>REMOTE_ADDR</code>, voir un autre header configuré dans le paramètre <code>xdebug.remote_addr_header</code> si renseigné). On considérera être dans ce cas dans nos exemples.</li><li>Si <code>xdebug.remote_connect_back</code> ne fonctionne pas, vous pouvez spécifier l’IP de la machine ou se trouve votre IDE (ou l’IP de votre machine hôte depuis votre VM) dans le paramètre <code>xdebug.remote_host</code>.</li></ul><p>Vous trouverez des informations plus completes sur le paramètrage de xdebug sur le site officiel: <a href="https://xdebug.org/docs/all_settings" target="_blank" rel="noopener">https://xdebug.org/docs/all_settings</a>.</p><h3 id="Debbugger-les-scripts-CLI-PHP"><a href="#Debbugger-les-scripts-CLI-PHP" class="headerlink" title="Debbugger les scripts CLI PHP"></a>Debbugger les scripts CLI PHP</h3><p>Il y a plusieurs façons de lancer une session de débuggage avec un script CLI PHP.</p><h4 id="Declenchement-a-l’aide-d’une-variable-d’environnement"><a href="#Declenchement-a-l’aide-d’une-variable-d’environnement" class="headerlink" title="Déclenchement à l’aide d’une variable d’environnement"></a>Déclenchement à l’aide d’une variable d’environnement</h4><p>Supposons notre config telle que ci-dessous:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// /etc/php5/cli/conf.d/20-xdebug.ini</span><br><span class="line">zend_extension=/usr/lib/php5/20100525/xdebug.so</span><br><span class="line">xdebug.remote_enable=On</span><br><span class="line">xdebug.remote_connect_back=On</span><br></pre></td></tr></table></figure></p><p>Le mode débuggage peut s’enclencher à l’aide d’une variable d’environnement:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> XDEBUG_CONFIG=<span class="string">"idekey=ma-valeur-quelconque"</span> <span class="comment"># Start debugging session</span></span><br><span class="line">$ php monscript.php</span><br><span class="line">$ <span class="built_in">unset</span> XDEBUG_CONFIG <span class="comment"># stop debugging session</span></span><br></pre></td></tr></table></figure><p>Sur l’IDE PHPSTORM que j’utilise, lorsqu’on lance un script CLI pour le débugger, c’est cette façon de faire qui est utilisée. L’IDE lance le script avec une <code>idekey</code> aléatoire, écoute les informations de débuggage qui arrivent avec cette <code>idekey</code> et dans le cas d’un serveur distant (ou VM) utilise les mappings définis dans l’IDE pour l’interpréteur distant afin de savoir à quels fichiers locaux correspondent les fichiers distants en cours d’exécution. A noter que simplement <code>export XDEBUG_CONFIG=&quot;ma-valeur-quelconque&quot;</code> fonctionne aussi si vous n’avez pas besoin de filtrer par idekey.</p><p>Vous pouvez aussi choisir de lancer le script directement sur votre machine distante (ou VM) et vous contenter découter toutes les connections de débuggage entrant dans votre IDE. Sur PHPSTORM par exemple, si l’on procède comme ça il nous manquera les informations de mapping. Il faut donc aussi définir la variable d’environnement <code>PHP_IDE_CONFIG</code> qui va faire référence à un une configuration de serveur que vous aurez defini dans PHPSTORM. Ce sont les mappings définis dans cette configuration qui seront utilisés (plus d’infos ici: <a href="https://www.jetbrains.com/help/phpstorm/zero-configuration-debugging.html#d468732e672)" target="_blank" rel="noopener">https://www.jetbrains.com/help/phpstorm/zero-configuration-debugging.html#d468732e672)</a>.</p><p>Une des limitation de cette méthode est que si un autre script CLI est lancé pendant votre session de débuggage (par un cron par exemple ou manuellement), il bénéficiera des variables d’environnement définies et sera également lancé en mode débuggage.</p><h4 id="Declenchement-en-modifiant-la-configuration-XDEBUG-a-la-volee"><a href="#Declenchement-en-modifiant-la-configuration-XDEBUG-a-la-volee" class="headerlink" title="Déclenchement en modifiant la configuration XDEBUG à la volée"></a>Déclenchement en modifiant la configuration XDEBUG à la volée</h4><p>Une autre possibilité est d’utiliser le paramètre -d de PHP pour modifier sa configuration uniquement pour le script que l’on lance:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php -dxdebug.remote_enable=1 -dxdebug.remote_connect_back=1 -dxdebug.xdebug.remote_autostart=1 monscript.php</span><br></pre></td></tr></table></figure></p><p>Le débuggage est ici déclenché par <code>xdebug.xdebug.remote_autostart</code>. Mettre cette directive dans votre fichier xdebug.ini serait bien trop coûteux car tous les scripts seraient lancés en mode débuggage; mais il peut être intéressant de l’utiliser uniquement pour le script que l’on souhaite débugger. Vous pouvez aussi bien sûr mettre <code>xdebug.remote_enable</code> et <code>xdebug.remote_connect_back</code> dans votre fichier xdebug.ini et simplement affecter <code>xdebug.remote_autostart</code> à la volée (via le paramètre php -d).</p><h4 id="Desactivation-Activation-complete-de-XDEBUG"><a href="#Desactivation-Activation-complete-de-XDEBUG" class="headerlink" title="Désactivation/Activation complète de XDEBUG"></a>Désactivation/Activation complète de XDEBUG</h4><p>Selon la puissance de votre serveur ou VM, il arrive parfois que de laisser XDEBUG activé soit trop coûteux. Même si aucune session de débuggage n’est déclenchée, la présence de XDEBUG provoque malgré tout une grosse baisse des performances. Vous pouvez donc choisir de n’activer XDEBUG que lorsque vous voulez utiliser le débugger:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// /etc/php5/cli/conf.d/20-xdebug.ini</span><br><span class="line">zend_extension=/usr/lib/php5/20100525/xdebug.so</span><br><span class="line">xdebug.remote_enable=On</span><br><span class="line">xdebug.remote_connect_back=On</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo php5enmod xdebug</span><br><span class="line">$ php -dxdebug.xdebug.remote_autostart=1 monscript.php</span><br><span class="line">$ sudo php5dismod xdebug</span><br></pre></td></tr></table></figure><p>Vous pouvez bien sûr aussi choisir de mettre le paramètre <code>xdebug.xdebug.remote_autostart</code> dans le fichier de configuration xdebug.ini. ça vous évitera de toujours devoir rajouter ce paramètre à la volée mais il faut garder à l’esprit que tout autre script CLI lancé pendant que XDEBUG est activé sera automatiquement en mode débuggage.</p><h3 id="Debbugger-un-site-web-en-PHP"><a href="#Debbugger-un-site-web-en-PHP" class="headerlink" title="Debbugger un site web en PHP"></a>Debbugger un site web en PHP</h3><p>Pour débugger un site web, le principe reste le même. Vous pouvez bien sûr utiliser <code>xdebug.xdebug.remote_autostart</code> mais déclencher systématiquement une session de debuggage étant rarement le but recherché, on préférera utiliser le cookie <code>XDEBUG_SESSION</code>. Vous pouvez affecter la valeur que vous souhaitez à ce cookie, le principe est le même qu’avec <code>idekey</code>, sa présence déclenche une session de débuggage. Et de la même façon, si vous lancez votre page en débuggage depuis votre IDE, votre IDE écoutera les connexions entrantes avec le cookie <code>XDEBUG_SESSION</code> ayant la même valeur que celle qu’il aura passé au lancement de la page. Si vous ne lancez pas votre page depuis votre IDE, un cookie peut facilement être ajouté avec les outils “développeur” de votre navigateur. Vous pouvez aussi passer à l’url le paramètre <code>XDEBUG_SESSION_START</code> qui provoquera la création du cookie <code>XDEBUG_SESSION</code>:</p><p><code>http://www.monsite.com?XDEBUG_SESSION_START=ma-valeur-quelconque</code></p><h3 id="Aller-plus-loin"><a href="#Aller-plus-loin" class="headerlink" title="Aller plus loin"></a>Aller plus loin</h3><p>Arrivé ici, nous savons débugger un script CLI et un site web. Mais quid si l’on souhaite débugger une API ? Le principe reste le même !</p><h4 id="API-REST"><a href="#API-REST" class="headerlink" title="API REST"></a>API REST</h4><p>Si vous utilisez un outil tel que Postman (par exemple) pour exécuter vos requêtes REST, il vous suffit simplement de rajouter le paramètre <code>XDEBUG_SESSION_START</code> à vos urls comme vu précédemment.</p><p>Si l’appel à votre API est effectuée au milieu du code de votre application, il vous suffit d’envoyer un cookie <code>XDEBUG_SESSION</code>; par exemple avec le client http Guzzle:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$client = <span class="keyword">new</span> \GuzzleHttp\Client();</span><br><span class="line">$cookieJar = GuzzleHttp\Cookie\CookieJar::fromArray([</span><br><span class="line">  <span class="string">'XDEBUG_SESSION'</span> =&gt; <span class="string">'ma-valeur-quelconque'</span></span><br><span class="line">], <span class="string">'monapi.com'</span>);</span><br><span class="line">$res = $client-&gt;request(<span class="string">'GET'</span>, <span class="string">'http://monapi.com/maressource.php'</span>, $cookieJar);</span><br></pre></td></tr></table></figure><h4 id="API-SOAP"><a href="#API-SOAP" class="headerlink" title="API SOAP"></a>API SOAP</h4><p>Si vous utilisez un outil comme SoapUI, il faut ajouter le paramètre <code>XDEBUG_SESSION_START</code> à l’url de votre fichier wsdl.</p><p>Si l’appel à votre API est effectuée au milieu du code de votre application, même fonctionnement que pour une API REST, on ajoute le cookie <code>XDEBUG_SESSION</code> dans le code:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$client = <span class="keyword">new</span> \SoapClient(<span class="string">'http://www.monapi.com);</span></span><br><span class="line"><span class="string">$client-&gt;__setCookie('</span>XDEBUG_SESSION<span class="string">', '</span>ma-valeur-quelconque<span class="string">');</span></span><br><span class="line"><span class="string">$client-&gt;mamethode($monparam);</span></span><br></pre></td></tr></table></figure><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Voilà ! j’espère que ce petit tour d’horizon vous aura permis de mieux appréhender le fonctionnement de XDEBUG :)</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YAML et in_array, mauvaise surprise</title>
      <link href="/2018/03/18/YAML-et-in_array/"/>
      <url>/2018/03/18/YAML-et-in_array/</url>
      
        <content type="html"><![CDATA[<p>Je vais ici vous conter une petite mésaventure qui m’est arrivée sur une des applications de la société où je travaille. Nous avons un Yaml de configuration qui indique quels clients doivent passer par une action donnée. Le fichier a cette forme:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">targetedCustomers:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">auchan</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">leclerc</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">geant</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">cora</span></span><br></pre></td></tr></table></figure></p><p>Ensuite, rien d’extraordinaire, on utilise in_array pour tester si le client courant est concerné par l’action proposée:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Some stuff for parsing Yaml before</span></span><br><span class="line"><span class="comment">// $targetedCustomers is worth ['auchan', 'leclerc', 'geant', 'cora'] </span></span><br><span class="line"><span class="keyword">if</span> (in_array($currentCustomer, $targetedCustomers)) &#123;</span><br><span class="line">  <span class="comment">// Execute the action</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Jusque là tout va bien. Mais récemment nous avons ajouté le client “yes”. Drôle de nom pour un client vous allez me dire. Il n’empêche.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">targetedCustomers:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">auchan</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">leclerc</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">geant</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">cora</span></span><br><span class="line"><span class="bullet">  -</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>Et tout d’un coup <strong>TOUS</strong> nos clients se sont mis à être elligibles pour l’action précédemment évoquée. Pas glop. Comment en est-on arrivé à ce résultat ?<br><a id="more"></a></p><h2 id="Yaml-et-ses-valeurs-reservees"><a href="#Yaml-et-ses-valeurs-reservees" class="headerlink" title="Yaml et ses valeurs resérvées"></a>Yaml et ses valeurs resérvées</h2><p>En Yaml, certaines valeurs sont automatiquement converties. La chaine de caractères “true” (peu importe la casse) devient le booléan true. De même pour la chaine “on”. Et aussi pour la chaine “yes”. Tiens ça se précise. Donc une fois parsé, notre Yaml devient:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">print_r($targetedCustomers);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array(</span></span><br><span class="line"><span class="comment">  [0] =&gt; auchan,</span></span><br><span class="line"><span class="comment">  [1] =&gt; leclerc,</span></span><br><span class="line"><span class="comment">  [2] =&gt; geant,</span></span><br><span class="line"><span class="comment">  [3] =&gt; cora,</span></span><br><span class="line"><span class="comment">  [4] =&gt; 1</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>Le premier reflèxe en voyant ce résultat est simplement de se dire que le client “yes” n’est pas dans le tableau donc ne sera jamais elligible. Sauf que le typage faible de php vient enfoncer le clou.</p><h2 id="Les-joies-du-typage-dynamique-de-PHP"><a href="#Les-joies-du-typage-dynamique-de-PHP" class="headerlink" title="Les joies du typage dynamique de PHP"></a>Les joies du typage dynamique de PHP</h2><p>Une des premières caractéristiques de PHP est son typage dynamique. Une caractéristique qui a toujours fait de PHP un language un peu à part où se côtoient des bidouilleurs parfois même non informaticiens et des professionnels pour qui ce language n’a aucun secret. La fonction in_array accepte un troisième paramètre qui permet de faire la recherche dans un tableau en vérifiant aussi le type. Voyons donc ce qui ce passe si on ne vérifie pas le type (ce qui est le comportement par defaut):<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// strict mode</span></span><br><span class="line">$test = [<span class="string">"auchan"</span>, <span class="string">"leclerc"</span>, <span class="keyword">true</span>];</span><br><span class="line"><span class="comment">// in_array("lidl", $test, true) =&gt; false</span></span><br><span class="line"><span class="comment">// in_array("auchan", $test, true) =&gt; true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// non strict mode (default behavior)</span></span><br><span class="line"><span class="comment">// in_array("lidl", $test) =&gt; true</span></span><br><span class="line">$test2 = [<span class="string">"auchan"</span>, <span class="string">"leclerc"</span>];</span><br><span class="line"><span class="comment">// in_array(true, $test2) =&gt; true</span></span><br></pre></td></tr></table></figure></p><p>Lorsque l’on n’est pas en mode strict, la conversion est à double sens. Si une valeur du tableau convertie dans le type de la valeur à rechercher correspond, on retourne true (ce qui est prévisible). Ce à quoi on s’attend moins, c’est que si la valeur à rechercher convertie dans le type d’une des valeur du tableau correspond à cette valeur, on retourne true aussi. A garder à l’esprit pour éviter ce genre de mésaventure…</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
